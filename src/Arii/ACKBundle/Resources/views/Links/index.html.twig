{% extends "AriiACKBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
// Module ?
var bundle='Graphviz';    
var toolbar;
var rankdir = 'TB';
var splines = 'polyline';
var graph_path= 'live';
var graph_file= '.*';
var graph_paths = '';
var show_params = 'n';
var show_events = 'n';
var show_jobs = 'n';
var show_chains = 'n';
var show_config = 'n';
var path= 'live';
var folder = '';
var graph;
var probe = {{ probe }};

function Init() {
    mySidebar.items('links').setActive();

    myLayout = globalLayout.cells("b").attachLayout('2U');
    myLayout.cells("a").setText("{{ "Links" | trans }}");
    myLayout.cells("a").setWidth(620);
    myLayout.cells("b").hideHeader();

    myGrid = myLayout.cells("a").attachGrid();
    myGrid.setImagePath( "{{ asset('/images/') }}");
    myGrid.setHeader("{{ "Name" | trans }},{{ "From" | trans }},{{ "Type" | trans }},{{ "To" | trans }},{{ "Strength" | trans }}");
    myGrid.setHeader("#text_filter,#text_filter,#cspan,#text_filter,#cspan");
    myGrid.setInitWidths("220,*,50,*,50");    
    myGrid.setColAlign("left,left,left,left,left");
    myGrid.setColTypes("ro,ro,img,ro,ro");
    myGrid.setColSorting("str,str,str,str,str");
    myGrid.enableAlterCss("even_row","odd_row");   
    myGrid.enableDragAndDrop(true);    
    myGrid.init();
    myGrid.load("{{ url('xml_ACK_links_grid') }}");
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        EditLink(rid);
    });

    formData = [
        { type: "settings", position: "label-left", labelWidth: 80, inputWidth: 350, labelAlign: "right", readonly: 1, position: "label-left" },
        { type: "hidden", name: 'id' },       
        {   type: "block",
            inputWidth: "auto",
            list: [    
                {type: "input", name: 'name', label:'{{ 'Name' | trans }}', required: true },
                {type: "input", name: 'title', label:'{{ 'Title' | trans }}' },
                {type: "input", name: 'description', label:'{{ 'Description' | trans }}', rows: 6 },
                {type: "select", name: 'link_type', label:'{{ 'Type' | trans }}',
                    options:[
                          {text: "{{ "Contains" | trans }}", value: "1"},
                          {text: "{{ "Depends" | trans }}", value: "2"},
                      ]
                  },
                {type: "input", name: 'link_strength', label:'{{ 'Strength' | trans }}' }
            ]
        }
    ];
    myForm = myLayout.cells("b").attachForm(formData);
    
    myFormToolbar = myLayout.cells("b").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('/images/') }}");
    myFormToolbar.loadStruct("{{ url('xml_ACK_link_toolbar') }}");
    myFormToolbar.attachEvent("onClick", function(id){
        switch (id) {
            case 'delete':
                // On edite pour sauvegarder
                globalLayout.cells("b").progressOn();
                dhtmlx.confirm({
                 title: "{{ "Delete link" | trans }}",
                 type: "confirm-error",
                 text: '{{ "Do you confirm the suppression ?" | trans }}',
                 callback: function(answer) { if (answer) {
                           myForm.send("{{ url('xml_ACK_link_delete') }}","POST",function(loader,response){
                           if(response === "success")
                           {
                             dhtmlx.message({
                                title:"{{ "Save" | trans }}",
                                type: "Notice",
                                lifetime: "60000",
                                text: "{{ "Link deleted" | trans }}"
                             });
                           }
                           else 
                           {
                             dhtmlx.message({
                                title:"{{ "Delete" | trans }}",
                                type: "error",
                                lifetime: "60000",
                                text: response
                             });
                             globalLayout.cells("a").attachHTMLString(response);
                           }
                                myGrid.deleteRow(myForm.getItemValue('id'));
                                myForm.getItemValue('ID','');
                                globalLayout.cells("b").progressOff();
                            })
                    }
                },
                 cancel: "{{ "No" | trans }}",
                 ok: "{{ "Yes" | trans }}" });
                   break;
            case 'new':
            case 'add':
                myForm.clear();
                break;
            case "copy":
                myForm.setItemValue("id",'');
                dhtmlx.message({
                        title:"Copy",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Copy" | trans }}"
                     });
                
                break;
            case 'save':
                globalLayout.progressOn();
                if(!myForm.validate())
                {
                    dhtmlx.message({
                        title:"Error",
                        type: "error",
                        lifetime: "60000",
                        text: "{{ "Please type in all the required fields!" | trans }}"
                     });
                    globalLayout.progressOff();
                    return;
                }
                myForm.send("{{ url('xml_ACK_link_save') }}","POST",function(loader,response){
                   if(response === "success")
                   {
                        dhtmlx.message({
                            title:"{{ "Save" | trans }}",
                            type: "Notice",
                            lifetime: "60000",              
                            text: "{{ "Saved" | trans }}"
                        });
                        myGrid.updateFromXML("{{ url('xml_ACK_links_grid') }}");
                   }
                   else 
                   {
                        dhtmlx.message({
                           title:"{{ "Save" | trans }}",
                           type: "alert-error",
                           lifetime: "60000",
                           width: "800px",
                           text: response
                        });
                   }
                   globalLayout.progressOff();
                });
                break;
            default:
                alert(id);
            }
    });
    
}

function PageRefresh() {};

function EditLink (id) {
    probe = id;
    myLayout.cells('b').progressOn();
    myForm.load("{{ url('xml_ACK_link_form') }}?id="+id,function(){
        myLayout.cells('b').progressOff();
    });
}
</script>
{% endblock %}