{% extends "AriiACKBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
function Init() {
    mySidebar.items('notifications').setActive();

    myLayout = globalLayout.cells("c").attachLayout('2E');
    
    myToolbar.loadStruct('{{ url('xml_ARII_toolbar') }}?export=1');
    
    formData = [
       { type: "settings", position: "label-left", labelWidth: 80, inputWidth: 350, labelAlign: "right", readonly: 1, position: "label-left" },
        {type: "hidden", name: 'ID' },       
        {   type: "block",
            inputWidth: "auto",
            list: [    
                {type: "input", name: 'NAME', label:'{{ 'Name' | trans }}', required: true },
                {type: "input", name: 'TITLE', label:'{{ 'Title' | trans }}' },
                {type: "input", name: 'DESCRIPTION', label:'{{ 'Description' | trans }}', rows: 4 },
                {type: 'select', name: 'APPLICATION_ID', label:'{{ 'Application' | trans }}',
                    connector: "{{ url('xml_Admin_applications_select') }}"
                },
                {type: "input", name: 'ORIGIN', label:'{{ 'Source' | trans }}' },
                {type: "input", name: 'PATTERN', label:'{{ 'Pattern' | trans }}' },
                {type: "input", name: 'STATUS', label:'{{ 'Status' | trans }}' },
                {type: "input", name: 'EXIT_CODE', label:'{{ 'Codes' | trans }}' },
                {type: "checkbox", name: 'ACTIVE', label:'{{ 'Active' | trans }}' },
                { type: "newcolumn" },
                {type: "input", name: 'ACTION', label:'{{ 'Action' | trans }}', rows: 3 },
                { type: "select", name: 'MSG_TYPE', label:'{{ 'Type' | trans }}', 
                    options: [ 
                        {text: "Jira", value: "jira", selected: true}, 
                        {text: "Mail",   value: "mail"}, 
                        {text: "SMS",    value: "SMS"}
                    ] 
                },
                {type: "input", name: 'MESSAGE', label:'{{ 'Message' | trans }}', rows: 3 },
                {type: "input", name: 'MSG_FROM', label:'{{ 'From' | trans }}' },
                {type: "input", name: 'MSG_TO', label:'{{ 'To' | trans }}' },
                {type: "input", name: 'MSG_CC', label:'{{ 'Copy' | trans }}' },
                {type: "input", name: 'TIME_SLOT', label:'{{ 'Time slot' | trans }}' },
                {type: 'select', name: 'NOTE_ID', label:'{{ 'Note' | trans }}',
                    connector: "{{ url('xml_Admin_notes_select') }}"
                }
            ]
        },
        {  type: "newcolumn" },
/*        {   type: "block",
            inputWidth: "auto",
            id: "todo",
            list: [    
*/                {   type: 'editor', 
                    toolbar: true,
                    iconsPath: "{{ asset('dhtmlx/skins/terrace/imgs/') }}",
                    name: 'TO_DO',
                    label: "{{ "Instructions" | trans }}", 
                    inputWidth: 800,
                    inputHeight: 200
                }
/*            ]
        }
*/    ];

    myForm = myLayout.cells("b").attachForm(formData);

    myFormToolbar = myLayout.cells("b").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('/images/') }}");
    myFormToolbar.loadStruct("{{ url('xml_ACK_notification_toolbar') }}");

    myTabbar = myLayout.cells("a").attachTabbar();
    myTabbar.addTab("def","{{ "Job" | trans }}","100px", null, true);
    myTabbar.addTab("chk","{{ "Actions" | trans }}","100px");
    
    myGrid = myTabbar.cells("def").attachGrid();
    myGrid.setImagePath( "{{ asset('/images/') }}");
    myGrid.setHeader("{{ "Name" | trans }},{{ "Title" | trans }},{{ "Pattern" | trans }},{{ "Source" | trans }},{{ "Alert" | trans }},{{ "Codes" | trans }}");
    myGrid.attachHeader("#text_filter,#text_filter,#text_filter,#select_filter,#text_filter,#select_filter");
    myGrid.setInitWidths("*,*,*,100,250,100");
    myGrid.setColAlign("left,left,left,left,left,right");
    myGrid.setColTypes("ro,ro,ro,ro,ro,ro");
    myGrid.setColSorting("str,str,str,str,str,str");
    myGrid.enableAlterCss("even_row","odd_row");    
    myGrid.init();
    myGrid.load( "{{ url('xml_ACK_notifications_grid') }}" );
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        EditAlert(rid);
    });

    myFormToolbar.attachEvent("onClick", function(id){
        switch (id) {
            case 'delete':
                // On edite pour sauvegarder
                globalLayout.cells("b").progressOn();
                dhtmlx.confirm({
                 title: "{{ "Delete alert" | trans }}",
                 type: "confirm-error",
                 text: '{{ "Do you confirm the suppression ?" | trans }}',
                 callback: function(answer) { if (answer) {
                           myForm.send("{{ url('xml_ACK_notification_delete') }}","POST",function(loader,response){
                           if(response === "success")
                           {
                             dhtmlx.message({
                                title:"{{ "Save" | trans }}",
                                type: "Notice",
                                lifetime: "60000",
                                text: "{{ "Alert deleted" | trans }}"
                             });
                           }
                           else 
                           {
                             dhtmlx.message({
                                title:"{{ "Delete" | trans }}",
                                type: "error",
                                lifetime: "60000",
                                text: response
                             });
                             globalLayout.cells("a").attachHTMLString(response);
                           }
                                myGrid.deleteRow(myForm.getItemValue('ID'));
                                myForm.getItemValue('ID','');
                                globalLayout.cells("b").progressOff();
                            })
                    }
                },
                 cancel: "{{ "No" | trans }}",
                 ok: "{{ "Yes" | trans }}" });
                   break;
            case 'new':
            case 'add':
                myForm.clear();
                break;
            case "copy":
                myForm.setItemValue("ID",'');
                dhtmlx.message({
                        title:"Copy",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Copy" | trans }}"
                     });
                
                break;
            case 'save':
                globalLayout.progressOn();
                if(!myForm.validate())
                {
                    dhtmlx.message({
                        title:"Error",
                        type: "error",
                        lifetime: "60000",
                        text: "{{ "Please type in all the required fields!" | trans }}"
                     });
                    return;
                }
                myForm.send("{{ url('xml_ACK_notification_save') }}","POST",function(loader,response){
                   if(response === "success")
                   {
                     dhtmlx.message({
                        title:"{{ "Save" | trans }}",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Alert saved" | trans }}"
                     });
                   }
                   else 
                   {
                     dhtmlx.message({
                        title:"{{ "Save" | trans }}",
                        type: "error",
                        lifetime: "60000",
                        text: response
                     });
                     globalLayout.cells("b").attachHTMLString(response);
                   }
                   myGrid.updateFromXML("{{ url('xml_ACK_notifications_grid') }}");
                   globalLayout.progressOff();
                });
                break;
            default:
                alert(id);
            }
    });

    myToolbar2 = myTabbar.cells("chk").attachToolbar();
    myToolbar2.setIconsPath("{{ asset('/images/') }}");
    myToolbar2.loadStruct("{{ url('xml_ACK_notifications_toolbar2') }}");

    myTabbar.attachEvent("onContentLoaded", function(id){
        myTabbar.cells("chk").progressOff();
    });        
    myToolbar2.attachEvent("onClick", function(id){
        
        switch (id) {
            case 'go':
                myTabbar.cells("chk").progressOn();                
                myTabbar.cells("chk").attachURL("{{ url('html_ACK_notifications_check') }}?job="+this.getValue("input")+"&error="+this.getValue("status")+"&codes="+this.getValue("codes"));
                break;
            default:
                alert(id);
            }
    });    
}

function ClickToolbar (itemid,state) {
    var id = itemid.split('_');    
    switch (id[0]) {
        case 'refresh':
            myGrid.updateFromXML("{{ url('xml_ACK_notifications_grid') }}");
            break;
        case 'EXPORT':
            switch (id[1]) {
                case 'xls':
                    alert("{{ url('xls_ACK_notifications') }}");
                    window.location.href= "{{ url('xls_ACK_notifications') }}";                
                    break;
                default:
                    alert(id);
            }
            break;
        default:
            alert(id);
        }
}
</script>
{% endblock %}
