{% extends "AriiACKBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
// Module ?
var bundle='Graphviz';    
var toolbar;
var rankdir = 'TB';
var splines = 'polyline';
var graph_path= 'live';
var graph_file= '.*';
var graph_paths = '';
var show_params = 'n';
var show_events = 'n';
var show_jobs = 'n';
var show_chains = 'n';
var show_config = 'n';
var path= 'live';
var folder = '';
var graph;
var probe = {{ probe }};

function Init() {
    mySidebar.items('probes').setActive();

    myLayout = globalLayout.cells("b").attachLayout('3L');
    myLayout.cells("a").setText("{{ "Probes" | trans }}");
    myLayout.cells("a").setWidth(620);
    myLayout.cells("b").hideHeader();
    myLayout.cells("c").collapse();

    myGrid = myLayout.cells("a").attachGrid();
    myGrid.setImagePath( "{{ asset('/images/') }}");
//    myGrid.setHeader("{{ "Name" | trans }},{{ "Description" | trans }},{{ "Type" | trans }}");
    myGrid.setHeader("#text_filter,#text_filter,#cspan");
    myGrid.setInitWidths("220,*,50");    
    myGrid.setColAlign("left,left,left");
    myGrid.setColTypes("ro,ro,img");
    myGrid.setColSorting("str,str,str");
    myGrid.enableAlterCss("even_row","odd_row");   
    myGrid.enableDragAndDrop(true);    
    myGrid.init();
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        EditProbe(rid);
    });
    myGrid.attachEvent("onDrag", function(sId,tId,sObj,tObj,sInd,tInd){
        changeState(sId,sObj,tObj);
    });
    
    myFilterToolbar = myLayout.cells("a").attachToolbar();
    myFilterToolbar.setIconsPath("{{ asset('/images/') }}");
    myFilterToolbar.loadStruct("{{ url('xml_ACK_probes_filter') }}",function(){
        LoadProbes();
    });
    myFilterToolbar.attachEvent("onClick", function(id,value){        
        LoadProbes();
    });
    myFilterToolbar.attachEvent("onStateChange", function(id,value){     
        LoadProbes();
    });
    
    myTabbar = myLayout.cells("b").attachTabbar();
    
    myTabbar.addTab("detail","{{ "Detail" | trans }}","150px", null, true);
    myTabbar.addTab("graph","{{ "Graph" | trans }}","150px");

    formData = [
        { type: "settings", position: "label-left", labelWidth: 80, inputWidth: 350, labelAlign: "right", readonly: 1, position: "label-left" },
        { type: "hidden", name: 'id' },       
        {   type: "block",
            inputWidth: "auto",
            list: [    
                {type: "input", name: 'name', label:'{{ 'Name' | trans }}', required: true },
                {type: "input", name: 'title', label:'{{ 'Title' | trans }}' },
                {type: "input", name: 'description', label:'{{ 'Description' | trans }}', rows: 6 },
                {type: "input", name: 'obj_type', label:'{{ 'Type' | trans }}' },
                {type: "input", name: 'state', label:'{{ 'State' | trans }}' },
                {type: "input", name: 'state_time', label:'{{ 'State time' | trans }}'},
                {type: "input", name: 'updated', label:'{{ 'Updated' | trans }}' }                
            ]
        }
    ];
    myForm = myTabbar.cells("detail").attachForm(formData);
    
    myFormToolbar = myTabbar.cells("detail").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('/images/') }}");
    myFormToolbar.loadStruct("{{ url('xml_ACK_probe_toolbar') }}");
    myFormToolbar.attachEvent("onClick", function(id){
        switch (id) {
            case 'delete':
                // On edite pour sauvegarder
                globalLayout.cells("b").progressOn();
                dhtmlx.confirm({
                 title: "{{ "Delete probe" | trans }}",
                 type: "confirm-error",
                 text: '{{ "Do you confirm the suppression ?" | trans }}',
                 callback: function(answer) { if (answer) {
                           myForm.send("{{ url('xml_ACK_probe_delete') }}","POST",function(loader,response){
                           if(response === "success")
                           {
                             dhtmlx.message({
                                title:"{{ "Save" | trans }}",
                                type: "Notice",
                                lifetime: "60000",
                                text: "{{ "Alert deleted" | trans }}"
                             });
                           }
                           else 
                           {
                             dhtmlx.message({
                                title:"{{ "Delete" | trans }}",
                                type: "error",
                                lifetime: "60000",
                                text: response
                             });
                             globalLayout.cells("a").attachHTMLString(response);
                           }
                                myGrid.deleteRow(myForm.getItemValue('id'));
                                myForm.getItemValue('ID','');
                                globalLayout.cells("b").progressOff();
                            })
                    }
                },
                 cancel: "{{ "No" | trans }}",
                 ok: "{{ "Yes" | trans }}" });
                   break;
            case 'new':
            case 'add':
                myForm.clear();
                break;
            case "copy":
                myForm.setItemValue("id",'');
                dhtmlx.message({
                        title:"Copy",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Copy" | trans }}"
                     });
                
                break;
            case 'save':
                globalLayout.progressOn();
                if(!myForm.validate())
                {
                    dhtmlx.message({
                        title:"Error",
                        type: "error",
                        lifetime: "60000",
                        text: "{{ "Please type in all the required fields!" | trans }}"
                     });
                    globalLayout.progressOff();
                    return;
                }
                myForm.send("{{ url('xml_ACK_probe_save') }}","POST",function(loader,response){
                   if(response === "success")
                   {
                        dhtmlx.message({
                            title:"{{ "Save" | trans }}",
                            type: "Notice",
                            lifetime: "60000",              
                            text: "{{ "Saved" | trans }}"
                        });
                        myGrid.updateFromXML("{{ url('xml_ACK_probes_grid') }}");
                   }
                   else 
                   {
                        dhtmlx.message({
                           title:"{{ "Save" | trans }}",
                           type: "alert-error",
                           lifetime: "60000",
                           width: "800px",
                           text: response
                        });
                   }
                   globalLayout.progressOff();
                });
                break;
            default:
                alert(id);
            }
    });
    
    myLayout.cells("c").setText("{{ "Links" | trans }}");
    myLayout.cells("c").collapse();
    
    myTabbar2 = myLayout.cells("c").attachTabbar();
    myTabbar2.addTab("contains","{{ "Contains" | trans }}","150px", null, true);
    myTabbar2.addTab("depends","{{ "Depends" | trans }}","150px");
    myTabbar2.addTab("isin","{{ "Is in" | trans }}","150px");
    myTabbar2.addTab("impacts","{{ "Impacts" | trans }}","150px");
    
    myContains = myTabbar2.cells("contains").attachGrid();
    myContains.setImagePath( "{{ asset('/images/') }}");
    myContains.setHeader("{{ "Name" | trans }},{{ "Description" | trans }}");
    myContains.attachHeader("#text_filter,#text_filter");
    myContains.setInitWidths("140,*");    
    myContains.setColAlign("left,left");
    myContains.setColTypes("ro,ro");
    myContains.setColSorting("str,str");
    myContains.enableAlterCss("even_row","odd_row");   
    myContains.enableDragAndDrop(true);    
    myContains.init();
    myContains.attachEvent("OnDrop",function(dId,tId,sObj,tObj) {
        dhx4.ajax.get( "{{ url('txt_ACK_link_probes') }}?action=add&source_id="+probe+"&target_id="+dId+'&type=1', function(loader,response) {  
            EditProbe(probe);
        });
    });

    myDepends = myTabbar2.cells("depends").attachGrid();
    myDepends.setImagePath( "{{ asset('/images/') }}");
    myDepends.setHeader("{{ "Name" | trans }},{{ "Description" | trans }}");
    myDepends.attachHeader("#text_filter,#text_filter");
    myDepends.setInitWidths("140,*");    
    myDepends.setColAlign("left,left");
    myDepends.setColTypes("ro,ro");
    myDepends.setColSorting("str,str");
    myDepends.enableAlterCss("even_row","odd_row");   
    myDepends.enableDragAndDrop(true);    
    myDepends.init();
    myDepends.attachEvent("OnDrop",function(dId,tId,sObj,tObj) {
        dhx4.ajax.get( "{{ url('txt_ACK_link_probes') }}?action=add&source_id="+probe+"&target_id="+dId+'&type=2', function(loader,response) {  
            EditProbe(probe);
        });
    });

    myIsIn = myTabbar2.cells("isin").attachGrid();
    myIsIn.setImagePath( "{{ asset('/images/') }}");
    myIsIn.setHeader("{{ "Name" | trans }},{{ "Description" | trans }}");
    myIsIn.attachHeader("#text_filter,#text_filter");
    myIsIn.setInitWidths("140,*");    
    myIsIn.setColAlign("left,left");
    myIsIn.setColTypes("ro,ro");
    myIsIn.setColSorting("str,str");
    myIsIn.enableAlterCss("even_row","odd_row");   
    myIsIn.enableDragAndDrop(true);    
    myIsIn.init();
    myIsIn.attachEvent("OnDrop",function(dId,tId,sObj,tObj) {
        dhx4.ajax.get( "{{ url('txt_ACK_link_probes') }}?action=add&source_id="+dId+"&target_id="+probe+'&type=1', function(loader,response) {  
            EditProbe(probe);
        });
    });

    myImpacts = myTabbar2.cells("impacts").attachGrid();
    myImpacts.setImagePath( "{{ asset('/images/') }}");
    myImpacts.setHeader("{{ "Name" | trans }},{{ "Description" | trans }}");
    myImpacts.attachHeader("#text_filter,#text_filter");
    myImpacts.setInitWidths("140,*");    
    myImpacts.setColAlign("left,left");
    myImpacts.setColTypes("ro,ro");
    myImpacts.setColSorting("str,str");
    myImpacts.enableAlterCss("even_row","odd_row");   
    myImpacts.enableDragAndDrop(true);    
    myImpacts.init();
    myImpacts.attachEvent("OnDrop",function(dId,tId,sObj,tObj) {
        dhx4.ajax.get( "{{ url('txt_ACK_link_probes') }}?action=add&source_id="+dId+"&target_id="+probe+'&type=2', function(loader,response) {  
            EditProbe(probe);
        });
    });

}

function PageRefresh() {};

function LoadProbes() {    
    var type=0;
    if (myFilterToolbar.getItemState("host"))   type+=1;
    if (myFilterToolbar.getItemState("service"))   type+=2;
    if (myFilterToolbar.getItemState("job"))   type+=4;
    myLayout.cells("a").progressOn();
    myGrid.load( "{{ url('xml_ACK_probes_grid') }}"
        +"?name="+myFilterToolbar.getValue("name")
        +"&description="+myFilterToolbar.getValue("description")
        +"&type="+type,
        function () {
            myLayout.cells("a").progressOff();            
        }
    );    
}

function EditProbe (id) {
    probe = id;
    myLayout.cells("c").expand();    
    myLayout.cells('b').progressOn();
    myTabbar2.cells("depends").progressOn();
    myTabbar2.cells("contains").progressOn();
    myTabbar2.cells("isin").progressOn();
    myTabbar2.cells("impacts").progressOn();
    myForm.load("{{ url('xml_ACK_probe_form') }}?id="+id,function(){
        myLayout.cells('b').progressOff();
        myContains.load("{{ url('xml_ACK_links_probes') }}?type=1&id="+id, function (rid) {
           myTabbar2.cells("contains").progressOff();
            myDepends.load("{{ url('xml_ACK_links_probes') }}?type=2&id="+id, function (rid) {
                myTabbar2.cells("depends").progressOff();
                myIsIn.load("{{ url('xml_ACK_links_probes') }}?type=3&id="+id, function (rid) {
                    myTabbar2.cells("isin").progressOff();
                    myImpacts.load("{{ url('xml_ACK_links_probes') }}?type=4&id="+id, function (rid) {
                        myTabbar2.cells("impacts").progressOff();
                    });
                });
            });
        });
    });
    // le dessin en parallele
    var url = "{{ url('svg_ACK_graph_links') }}";
    url += "?id="+id;
    url += "&splines="+encodeURIComponent(splines);
    myTabbar.cells("graph").attachURL(url);
}
</script>
{% endblock %}