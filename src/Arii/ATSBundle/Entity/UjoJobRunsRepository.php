<?php

namespace Arii\ATSBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UjoJobRunsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UjoJobRunsRepository extends EntityRepository
{
    public function findJobRuns($joid,$Filter) { 
        $q = $this->createQueryBuilder('e')
        ->select('e.runNum,e.ntry,e.startime,e.endtime,e.evtNum,e.runMachine,e.runtime,e.exitCode,e.status,e.hasExtendedInfo,e.jobVer,e.replyMessage,e.replyResponse,e.stdErrFile,e.stdOutFile')
        ->where('e.joid = :joid')
        ->setParameter('joid',$joid)
        ->orderBy('e.runNum,e.ntry')
        ->getQuery();        
        return $q->getResult();
    }

    public function findRuns($Filter) {
        $q = $this->createQueryBuilder('e')
        ->select('e.runNum,e.ntry,e.startime,e.endtime,e.evtNum,e.runMachine,e.runtime,e.exitCode,e.status,e.hasExtendedInfo,e.jobVer,e.replyMessage,e.replyResponse,e.stdErrFile,e.stdOutFile,'
                . 'j.jobName,j.isCurrver')
        ->leftjoin('AriiATSBundle:UjoJob','j',\Doctrine\ORM\Query\Expr\Join::WITH,'e.joid = j.joid') 
        ->where('j.isCurrver = 1')
        ->orderBy('e.runNum,e.ntry')
        ->setMaxResults(1000);
        # Filtrage
        if (isset($Filter['job_name']))
            $q->andWhere('j.jobName like :job_name')
                ->setParameter('job_name',$Filter['job_name']);           
        return $q->getQuery()->getResult();
    }
    
}
