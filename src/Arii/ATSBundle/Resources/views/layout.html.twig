{% extends "AriiCoreBundle::base.html.twig" %}
{% block dhtmlx %}
<link rel="stylesheet" type="text/css" href="{{ asset('dhtmlx/skins/terrace/dhtmlx.css') }}" />
<script src="{{ asset('dhtmlx/codebase/dhtmlx.js') }}" type="text/javascript"></script>
{% endblock dhtmlx %}
{% block dhtmlx_plus %}
{% endblock dhtmlx_plus %}
{% block onload %}
<script language="javascript">
var db="{{ db }}";
var size=180;
var max_history = 0; // pas d'historique
var chained = 0; // que des chaines normales
var only_warning = 0;
var status;
var sort="last";

dhtmlxEvent(window,"load",function(){       
    AriiLayout('ATS','databases,filters_ats,history,refresh,help',size);

    menuLayout = globalLayout.cells("a").attachLayout("2E");    
    menuLayout.cells("a").setText("{{ "Menu" | trans }}");
/*
    toolbarLayout = globalLayout.cells("a").attachToolbar();
    toolbarLayout.setIconsPath("{{ asset('/images/') }}");
    toolbarLayout.loadStruct( "{ { url('xml_ATS_jobs_grid_toolbar') }}");
*/
    myAccordion = menuLayout.cells("a").attachAccordion();
    myAccordion.addItem( "status", "{{ "Status" | trans }}", true); 
    mySidebar = myAccordion.cells("status").attachSidebar({
        icons_path: "{{ asset('/images/') }}",
        // template: "tiles",
        width: size,
        items:
        [
            { id:  "dashboard", text: "{{ "Dashboard" | trans }}", icon: "eye.png" },
            { id:  "alarms", text: "{{ "Alarms" | trans }}", icon: "error.png" },
            { id:  "processes", text: "{{ "Processes" | trans }}", icon: "process.png" }
        ]
    });
    mySidebar.attachEvent("onBubbleClick", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });    
    mySidebar.attachEvent("onSelect", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });
    myAccordion.addItem( "components", "{{ "Components" | trans }}"); 
    mySidebar2 = myAccordion.cells("components").attachSidebar({
        icons_path: "{{ asset('/images/') }}",
        // template: "tiles",
        width: size,
        items:
        [
            { id:  "schedulers", text: "{{ "Schedulers" | trans }}", icon: "scheduler.png" },
            { id:  "appservers", text: "{{ "App. servers" | trans }}", icon: "app_server.png" },
            { id:  "agents", text: "{{ "Agents" | trans }}", icon: "machine.png" },
            { id:  "queues", text: "{{ "Queues" | trans }}", icon: "queue.png" },
        ]
    });
    mySidebar2.attachEvent("onBubbleClick", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });    
    mySidebar2.attachEvent("onSelect", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });
    myAccordion.addItem( "audit", "{{ "Audit" | trans }}"); 
    mySidebar3 = myAccordion.cells("audit").attachSidebar({
        icons_path: "{{ asset('/images/') }}",
        // template: "tiles",
        width: size,
        items:
        [
            { id:  "actions", text: "{{ "Actions" | trans }}", icon: "audit.png" },
            { id:  "changes", text: "{{ "Changes" | trans }}", icon: "edit.png" },
            { type:"separator" },
        ]
    });
    mySidebar3.attachEvent("onBubbleClick", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });    
    mySidebar3.attachEvent("onSelect", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });
    myAccordion.addItem( "misc", "{{ "Miscellaneous" | trans }}"); 
    mySidebar4 = myAccordion.cells("misc").attachSidebar({
        icons_path: "{{ asset('/images/') }}",
        // template: "tiles",
        width: size,
        items:
        [
            { id:  "report", text: "{{ "Report" | trans }}", icon: "report.png" },
            { type:"separator" },
            { id:  "templates", text: "{{ "Templates" | trans }}", icon: "wand.png" },
        ]
    });
    mySidebar4.attachEvent("onBubbleClick", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });    
    mySidebar4.attachEvent("onSelect", function(id, value){
        document.location.href = "{{ url('arii_ATS_index') }}"+id;
        return true;
    });
    
    menuLayout.cells("b").setText("{{ "Status" | trans }}");
    menuLayout.cells("b").setHeight(size+80);
    pieChart = menuLayout.cells("b").attachChart( {
            view:    "donut",
            value:   "#nb#",
            color:   "#color#",
            tooltip: "#nb#",
            legend:{
                    width:    0,
                    align:    "left",
                    valign:   "bottom",
                    template: "#id#"
            },
            pieInnerText: "#nb#",
            shadow:false
    });
    Init();
    PageRefresh();
});
</script>
{% endblock onload %}
{% block body %}{% endblock%}
{% block script %}
<script language="javascript">
function PageRefresh() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
    // Graphique principal
    var url = "{{ url('api_ATS_alarms_list', { "repoId": "REPOID" } ) }}?outputFormat=dhtmlxPie";
    var timestamp = currentTime.getTime();
    pieChart.load(url.replace('REPOID',db),"json", function() {
        // Clear, on supprime ce qui est egal a 0
        for(i=0;i<pieChart.dataCount();i++) {
            var id = pieChart.idByIndex(i);
            var data = pieChart.get(id);
            if ((timestamp/1000)-data.timestamp>0) {
                pieChart.remove(id);
            }
        }
        pieChart.refresh();
        var url = "{{ url('api_ATS_alarms_infos', { "repoId": "REPOID" } ) }}";
        dhx4.ajax.get( url.replace('REPOID',db) ,function(r1) {  
            t = dhx4.s2j(r1.xmlDoc.responseText);
            if (t['state']['NOT_CLOSED']>0) 
                mySidebar.cells("alarms").setBubble(t['state']['NOT_CLOSED']);
            else
                mySidebar.cells("alarms").clearBubble();     
        });
    });
    myRibbon.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );    
    GridRefresh();
}

function Sendevent( Job, Event )
{
    Time = false;
    var largeur = 640;
    var dhxWins = new dhtmlXWindows();

    msg = dhxWins.createWindow( "sendevent" ,  (document.body.offsetWidth-largeur)/2, 50, largeur, 400 );
    
    var form = msg.attachForm();
    form.loadStruct("{{ url('json_ATS_sendevent_form') }}", function(){
        form.setItemValue("JOB",Job);
        form.setItemValue("ACTION",Event);
        form.setItemValue("STATUS",Event);
        form.hideItem("FORCE");
        form.hideItem("RESPONSE");
        form.hideItem("STATUS");
        switch(Event) {
            case 'KILLJOB':
                Text = "{{ "Kill Job" | trans }}";
                break;
            case 'STARTJOB':
                Text = "{{ "Start Job" | trans }}";
                form.showItem("FORCE");
                break;
            case 'JOB_ON_NOEXEC':
            case 'JOB_ON_ICE':
            case 'JOB_ON_HOLD':
                Text = "{{ "Block job" | trans }}";
                break;
            case 'JOB_OFF_NOEXEC':
            case 'JOB_OFF_ICE':
            case 'JOB_OFF_HOLD':
                Text = "{{ "Unblock job" | trans }}";
                break;
            case 'INACTIVE':
            case 'SUCCESS':
            case 'FAILURE':
            case 'TERMINATED':
                Text = "{{ "Change status" | trans }} "+Event;
                form.showItem("STATUS");
                break;
            case 'REPLY_RESPONSE':
            case 'WAIT_REPLY':
                Text = "{{ "Reply" | trans }}";
                form.hideItem("COMMENT");
                form.showItem("RESPONSE");
                break;
            default:
                Text = "{{ "Send event" | trans }}";
                break;
        }
        msg.setText( Text );    
    });
            
    var toolbar;
    toolbar = msg.attachToolbar();
    toolbar.setIconsPath("{{ asset('/images/') }}");
    toolbar.loadStruct( "{{ url('xml_ATS_sendevent_form_toolbar') }}" ,function(){
        if (Time) {
            GBCalendar = new dhtmlXCalendarObject(toolbar.getInput('refDate'));
            GBCalendar.setDateFormat("%Y-%m-%d %H:%i:%s");
            GBCalendar.setWeekStartDay(1);
        }
    });

    form.attachEvent("onButtonClick", function(name) {
        dhtmlx.message({
            type: "Notice",
            text: Text,
            width: "800"
        });
        msg.progressOn();
        var job = form.getItemValue('JOB');
        var action = form.getItemValue('ACTION');
        var comment = form.getItemValue('COMMENT');
        var force = form.getItemValue('FORCE');
        form.send("{{ url('html_ATS_sendevent_exec') }}","POST",function(loader,response){
            dhtmlx.message({
                type: "Notice",
                expire: 10000,
                width: "800px",
                text: loader.xmlDoc.responseText
            });
            msg.progressOff();
            msg.close();
            
            GridRefresh();
            globalLayout.cells("b").progressOn();
        });               
    });

    toolbar.attachEvent("onClick",function(itemid){
        switch(itemid) {
            case "execute":
                if (Time)
                    start_time = toolbar.getValue("refDate");
                break;
            case "cancel":
                msg.close();
                break;
            default:
                alert(itemid);
                break;
        }
        return true;
    });
/*            
    dhtmlXCalendarObject.prototype.langData["fr"] = {
            monthesFNames: ["Janvier","Février","Маrs","Аvril","Маi","Juin","Juillet","Аoût","Septembre","Оctobre","Novembre","Décembre"],
            monthesSNames: ["Jan.","Fév.","Маrs","Аvr","Маi","Juin","Jui.","Août","Sep.","Оct.","Nov.","Déc."],
            daysFNames: ["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],
            daysSNames: ["Di","Lu","Ma","Me","Je","Ve","Sa"],
            weekstart: 1
    };
    dhxCalendar = new dhtmlXCalendarObject(dhxForm.getInput("at"));
    dhxCalendar.loadUserLanguage("fr");
    dhxCalendar.setDateFormat("%Y-%m-%d %H:%i:%s");
    dhxCalendar.showTime();
*/      
    return true;    
}

</script>
{% include "AriiCoreBundle:Common:ribbon.js.twig" %}
{% endblock script %}
