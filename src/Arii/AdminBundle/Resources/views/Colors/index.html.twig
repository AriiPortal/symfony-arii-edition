{# src/Arii/CoreBundle/Resources/views/index.html.twig #}
{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script>
dhtmlxEvent(window,"load",function(){ 
var size=300;

    globalLayout = new dhtmlXLayoutObject(document.body,"3L");
    globalLayout.cells("a").hideHeader();
    globalLayout.cells("a").setWidth(size);
    globalLayout.cells("b").hideHeader();
    globalLayout.cells("c").hideHeader();
    globalLayout.cells("c").setHeight(220); 
    
    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/menu/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('bundles/ariicore/images/ribbon/') }}" );
    myRibbon.loadStruct("{{ url('json_Admin_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );

    mySidebar = globalLayout.cells("a").attachSidebar({
        {% include "AriiAdminBundle:Default:menu.html.twig" %}        
    });
    mySidebar.attachEvent("onBubbleClick", function(id, value){
        // bubble clicked, your code here
        // 'return true' means item allowed to be selected
        // false - otherwise
        return true;
    });
    mySidebar.attachEvent("onSelect", function(id, value){
        document.location.href = "{{ url('arii_Admin_index') }}"+id;
        return true;
    });
            
    formData = [
       { type: "settings", position: "label-left", labelWidth: 100, inputWidth: 240, labelAlign: "right", readonly: 1, position: "label-left" },
            {type: "hidden", name: 'id' },
            {type: "input", name: 'status', label:'{{ 'Status' | trans }}', required: true },
            {type: "colorpicker", name: 'color', label:'{{ 'Color' | trans }}' },
            {type: "colorpicker", name: 'bgcolor', label:'{{ 'Background' | trans }}' },
        ];
    
    myForm = globalLayout.cells("c").attachForm(formData);
    myForm.enableLiveValidation(true);
    
    var dp = new dataProcessor("{{ url('xml_Admin_color_form') }}");
    dp.init(myForm);

    myFormToolbar = globalLayout.cells("c").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('/bundles/ariicore/images/toolbar/') }}");
    myFormToolbar.loadStruct("{{ url('xml_Admin_color_toolbar') }}");
    
    myGrid = globalLayout.cells("b").attachGrid();
    myGrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    myGrid.setHeader("{{ "Status" | trans }},{{ "Color" | trans }},{{ "Text" | trans }},{{ "Sample" | trans }}");
    myGrid.attachHeader("#text_filter,#text_filter,#text_filter,#text_filter");
    myGrid.setInitWidths("*,250,250,400");
    myGrid.setColAlign("left,left,left,left");
    myGrid.setColTypes("ro,ro,ro,ro");
    myGrid.setColSorting("str,str,str,str");
    myGrid.enableAlterCss("even_row","odd_row");    
    myGrid.init();
    myGrid.load( "{{ url('xml_Admin_colors_grid') }}" );
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        EditColor(rid);
    });
    
    myFormToolbar.attachEvent("onClick", function(id){
        switch (id) {
            case 'new_color':
            case 'add_color':
                myForm.clear();
                break;
            case 'save_color':
                globalLayout.progressOn();
                if(!myForm.validate())
                {
                    dhtmlx.message({
                        title:"Error",
                        type: "error",
                        lifetime: "60000",
                        text: "{{ "Please type in all the required fields!" | trans }}"
                     });
                    return;
                }
                myForm.send("{{ url('xml_Admin_color_save') }}","POST",function(loader,response){
                   if(response === "success")
                   {
                     dhtmlx.message({
                        title:"{{ "Save" | trans }}",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Color saved" | trans }}"
                     });
                   }
                   else 
                   {
                     dhtmlx.message({
                        title:"{{ "Save" | trans }}",
                        type: "error",
                        lifetime: "60000",
                        text: response
                     });
                     // globalLayout.cells("b").attachHTMLString(response);
                   }
                   myGrid.clearAll();
                   myGrid.load("{{ url('xml_Admin_colors_grid') }}", function() {
                        globalLayout.progressOff();
                   });
                });
                break;
            default:
                alert(id);
            }
    });

    globalLayout.cells("a").hideHeader();

});

function EditColor(id) {
    globalLayout.cells("b").progressOn();
    myForm.setItemLabel("fieldset","{{ "Edit color" | trans }}");
    myForm.clear();
    myForm.load("{{ url('xml_Admin_color_form') }}?id="+id, function () {
        globalLayout.cells("b").progressOff();
    });
}

function DeleteColor(id) {
    // On edite pour sauvegarder
    globalLayout.cells("b").progressOn();
    EditColor(id);
    dhtmlx.confirm({
     title: "{{ "Delete color" | trans }}",
     type: "confirm-error",
     text: '{{ "Do you confirm the suppression ?" | trans }}',
     callback: function(answer) { if (answer) {
               myForm.send("{{ url('xml_Admin_color_delete') }}","POST",function(loader,response){
               if(response === "success")
               {
                 dhtmlx.message({
                    title:"{{ "Save" | trans }}",
                    type: "Notice",
                    lifetime: "60000",
                    text: "{{ "Color deleted" | trans }}"
                 });
               }
               else 
               {
                 dhtmlx.message({
                    title:"{{ "Delete" | trans }}",
                    type: "error",
                    lifetime: "60000",
                    text: response
                 });
               }
                    myGrid.deleteRow(id);
                    globalLayout.cells("b").progressOff();
                })
        }
    },
     cancel: "{{ "No" | trans }}",
     ok: "{{ "Yes" | trans }}" });
 }
 
function GridRefresh()
{
    myGrid.clearAll();
    myGrid.load("{{ url('xml_Admin_colors_grid') }}");
}

function GlobalRefresh() {
}
</script>
{% endblock %}
