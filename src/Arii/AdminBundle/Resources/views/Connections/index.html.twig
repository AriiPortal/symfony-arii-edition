{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
function Init() {
    
    myLayout = globalLayout.cells("c").attachLayout("3L");  
    myLayout.cells("a").setText("{{ "Categories" | trans }}");
    myLayout.cells("a").setWidth(300);
    
    myMenu = new dhtmlXMenuObject();
    myMenu.setIconsPath( "{{ asset('/images/') }}" );
    myMenu.renderAsContextMenu();
    myMenu.attachEvent("onClick", onMenuClick);
    myMenu.loadStruct("{{ url('xml_Admin_connections_menu') }}");

    myGrid = myLayout.cells("b").attachGrid();
    myGrid.setImagePath("{{ asset('arii/images/treegrid/') }}");
    
    myGrid.setHeader("{{ "Name"| trans }},{{ "Title"| trans }},{{ "Type"| trans }},{{ "Description"| trans }},{{ "Host"| trans }},{{ "Protocol"| trans }},{{ "Login"| trans }}");
    myGrid.attachHeader("#text_filter,#text_filter,#select_filter,#text_filter,#text_filter,#select_filter,#select_filter");
    myGrid.setInitWidths("150,200,200,*,200,150,200");
    myGrid.setColAlign("left,left,left,left,left,left,left");
    myGrid.setColTypes("ro,ro,ro,ro,ro,ro,ro");
    myGrid.enableContextMenu(myMenu);
//    myGrid.enableLightMouseNavigation( true );
    myGrid.load("{{ url('xml_Admin_connections_grid') }}" );
    myGrid.enableDragAndDrop(true);
    myGrid.init();
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        Edit(rid);
    });

    myTree = myLayout.cells("a").attachTree();
    myTree.setImagesPath("{{ asset('/images/') }}");
    myTree.load( "{{ url('xml_Admin_categories_tree') }}" );
    myTree.enableDragAndDrop(true, false);
    myTree.attachEvent("onClick",function(id){
        myLayout.cells("b").progressOn();
        myGrid.clearAll();
        myGrid.load("{{ url('xml_Admin_connections_grid') }}?category="+id, function() {
            myLayout.cells("b").progressOff();
        });
    })    

    formData = [
        { type: "settings", position: "label-left", labelWidth: 70, inputWidth: 300,labelAlign: "right" },
        { type: "hidden",
          name: "id"
        },
        {  type: "input",
            name: "name",
            label: "{{ "Name" | trans }}"
        },
        {  type: "input",
            name: "title",
            label: "{{ "Title" | trans }}"
        },
        {  type: "select",
            name: "domain",
            label: "{{ "Domain" | trans }}",
            required: true,
            options:[
                {text: "{{ "Agent" | trans }}", value: "agent"},
                {text: "{{ "Client" | trans }}", value: "client"},
                {text: "{{ "Database" | trans }}", value: "database"},
                {text: "{{ "JobScheduler" | trans }}", value: "jobscheduler"},
                {text: "{{ "File system" | trans }}", value: "fs" },
                {text: "{{ "Mail" | trans }}", value: "mail" },
                {text: "{{ "Web" | trans }}", value: "web" } 
            ]
         },
         {  type: "input",
            name: "description",
            label: "{{ "Description"| trans }}",
            rows: 3
         },
         {  type: "input",
            name: "host",
            label: "{{ "Host"| trans }}"
        },
        {  type: "newcolumn" },
        {  type: "input",
            name: "interface",
            label: "{{ "Interface"| trans }}"
        },
        {  type: "input",
            name: "protocol",
            label: "{{ "Protocol"| trans }}"
        },
        {  type: "input",
            name: "port",
            label: "{{ "Port"| trans }}"
        },
        {  type: "input",
            name: "login",
            label: "{{ "Login"| trans }}"
        },
        {   type: "select", 
            name: "auth_method", 
            label: "{{ "Auth. method" | trans }}",
            options: [
                {
                    text: "{{ "Password" | trans }}", 
                    value: "password",
                    list: [
                        {   type: "password",
                            name: "password",
                            label: "{{ "Password"| trans }}"
                        }
                    ]
                },
                {   text: "{{ "Private key" | trans }}", 
                      value: "key",
                      list: [ 
                        {   type: "input",
                            name: "private_key",
                            label: "{{ "Key"| trans }}",
                            rows: 4
                        }
                    ]
                }
            ]
        },
        {  type: "newcolumn" },        
        {  type: "checkbox",
            name: "service",
            label: "{{ "Service"| trans }}"
        },
        {  type: "input",
            name: "instance",
            label: "{{ "Instance"| trans }}"
        },
        {  type: "input",
            name: "database",
            label: "{{ "Database"| trans }}"
        },
        {  type: "input",
            name: "owner",
            label: "{{ "Owner"| trans }}"
        },
        {  type: "input",
            name: "driver",
            label: "{{ "Driver"| trans }}"
        },
        {  type: "input",
            name: "path",
            label: "{{ "Path"| trans }}"
        }                
    ];
    myForm = myLayout.cells("c").attachForm(formData);
    myForm.enableLiveValidation(true);
    
    myToolbar = myLayout.cells("c").attachToolbar();
    myToolbar.setIconsPath("{{ asset('/images/') }}");
    myToolbar.loadStruct("{{ url('xml_Admin_connection_toolbar') }}", function () {
        myToolbar.hideItem("delete_connection");
    });
    myToolbar.attachEvent("onClick", function (id){
        switch (id){
            case "add":
                New();
                break;
            case "copy":
                myForm.setItemValue("id",'');
                dhtmlx.message({
                        title:"Copy",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Copy" | trans }}"
                     });
                
                break;
            case "delete":
                id = myForm.getItemValue("id");
                Delete(id);
                break;
            case "save":
                if(!myForm.validate())
                {
                    dhtmlx.message({
                        title:"Error",
                        type: "error",
                        lifetime: "60000",
                        text: "{{ "Please type in all the required fields!" | trans }}"
                     });
                    return;
                }
                myLayout.cells("b").progressOn();
                myForm.send("{{ url('xml_Admin_connection_save') }}","POST",function(loader,response){
                    myLayout.cells("b").progressOff();
                    if(response === "success")
                   {
                     dhtmlx.message({
                        title:"Save",
                        type: "Notice",
                        lifetime: "60000",
                        text: "Saved"
                     });
                     myForm.setItemFocus("title");
                     GridRefresh();
                   }
                   else 
                   {
                       alert(response);
                   }               
                });
            break;
            case "check":
                myForm.send("{{ url('xml_Admin_connection_check') }}","POST",function(loader,response){
                    if(response === "success")
                    {
                     dhtmlx.message({
                        title:"Check",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Checked" | trans }}"
                     });
                   }
                });
                break;
            default:
                alert(id);
                break;
        }
    });
    myLayout.cells("b").hideHeader(); 
    myLayout.cells("c").hideHeader();     
}

function onMenuClick(myMenuitemId, type)
{
    var data=myGrid.contextID.split("_"); //rowInd_colInd
    var rId = data[0];
    var cInd = data[1];
    
    switch(myMenuitemId){
        case "add_connection":
            New();
            break;
        case "edit_connection":
            Edit(rid);
            break;
        case "delete_connection":
            Delete(rid);
            break;
        default:
            alert(myMenuitemId);
    }
    return true;
}

function GridRefresh()
{
    myGrid.load("{{ url('xml_Admin_connections_grid') }}");
}

function New() {
    myForm.clear();
    myForm.setItemFocus("name");
    myToolbar.hideItem("delete");
}

function Edit(id) {
    myLayout.cells("c").progressOn();
    myToolbar.showItem("delete");
    myForm.clear();
    myForm.load("{{ url('xml_Admin_connection_form') }}?id="+id, function () {
        myLayout.cells("c").progressOff();
    });
}

function Delete(id) {
    // On edite pour sauvegarder
    myForm.load("{{ url('xml_Admin_connection_form') }}?id="+id, function () {
        dhtmlx.confirm({
            title: "{{ "Delete connection" | trans }}",
            type: "confirm-error",
            text: '{{ "Do you confirm the suppression ?" | trans }}',
            callback: function(answer) { if (answer) {
                      myLayout.cells("b").progressOn();
                      myForm.send("{{ url('xml_Admin_connection_delete') }}","POST",function(loader,response){
                      if(response === "success")
                      {
                        dhtmlx.message({
                           title:"{{ "Delete" | trans }}",
                           type: "Notice",
                           lifetime: "60000",
                           text: "{{ "Connection deleted" | trans }}"
                        });
                        myGrid.deleteRow(id);
                        myLayout.cells("b").progressOff();
                      }
                      else 
                      {
                        dhtmlx.message({
                           title:"{{ "Delete" | trans }}",
                           type: "error",
                           lifetime: "60000",
                           text: response
                        });
                      }
                       })
               }
           },
            cancel: "{{ "No" | trans }}",
            ok: "{{ "Yes" | trans }}" 
        });
    });

 }

function GlobalRefresh() {};
</script>

{% endblock %}
