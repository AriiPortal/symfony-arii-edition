{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
var cron=-1;
var autorefresh;
function Init() {
    
    myLayout = globalLayout.cells("b").attachLayout("3U"); 
    myLayout.cells("a").hideHeader();
    myLayout.cells("a").setWidth(300);    
    myLayout.cells("b").hideHeader();
    myLayout.cells("c").collapse();
    myLayout.cells("c").setText("{{ "History" | trans }}");

    myGridMenu = new dhtmlXMenuObject(null);
    myGridMenu.setIconsPath( "{{ asset('/images/') }}" );
    myGridMenu.renderAsContextMenu();
    myGridMenu.loadStruct("{{ url('xml_Admin_cron_menu') }}");

    myGrid = myLayout.cells("a").attachGrid();
    myGrid.selMultiRows = true;
    myGrid.setImagePath( "{{ asset('/images/') }}");
    myGrid.setHeader("{{ "Name" | trans }},{{ "Next start" | trans }}");
    myGrid.attachHeader("#text_filter,#text_filter");
    myGrid.setInitWidths("*,150");
    myGrid.setColAlign("left,left");
    myGrid.setColTypes("ro,ro");
    myGrid.setColSorting("str,date");
    // myGrid.enableContextMenu(myGridMenu);
    myGrid.init();
    myGrid.load( "{{ url('xml_Admin_cron_list') }}" );
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        EditCron(rid);
    });

    myFormToolbar = myLayout.cells("b").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('/images/') }}");
    myFormToolbar.loadStruct("{{ url('xml_Admin_cron_toolbar') }}");

    formData = [
       { type: "settings", position: "label-left", labelWidth: 100, inputWidth: 240, labelAlign: "right", readonly: 1, position: "label-left" },
             {type:"hidden", name: 'id' },
            {type:"input", name: 'NAME', label:'{{ 'Name' | trans }}', required: true },
            {type:"input", name: 'URL', label:'{{ 'Url' | trans }}', rows: 3, required: true},
            {type:"input", name: 'TITLE', label:'{{ 'Title' | trans }}' },
            {type:"input", name: 'DESCRIPTION', label:'{{ 'Description' | trans }}', rows: 3},
            {type:"checkbox", name: 'ACTIVE', label:'{{ 'Active' | trans }}' },
            {type:"newcolumn"},
            {type:"input", name: 'MINUTES', label:'{{ 'Minutes' | trans }}', value: '*' },
            {type:"input", name: 'HOURS', label:'{{ 'Hours' | trans }}', value: '*' },
            {type:"input", name: 'MONTH_DAYS', label:'{{ 'Days of month' | trans }}', value: '*' },
            {type:"input", name: 'WEEK_DAYS', label:'{{ 'Days of week' | trans }}', value: '*' },
            {type:"input", name: 'MONTHS', label:'{{ 'Months' | trans }}', value: '*' },
            {type:"input", name: 'YEARS', label:'{{ 'Years' | trans }}', value: '*'},
            {type:"input", name: 'NEXT_RUN', label:'{{ 'Next run' | trans }}', value: ''},
            {type:"hidden", name: 'STATUS', label:'{{ 'Status' | trans }}', value: ''},
            {type:"hidden", name: 'CHANGE_USER', label:'{{ 'Change user' | trans }}', value: ''},
            {type:"hidden", name: 'CHANGE_TIME', label:'{{ 'Change time' | trans }}', value: ''}
            
        ];
    
    myForm = myLayout.cells("b").attachForm(formData);
    myForm.enableLiveValidation(true);
    
    myFormToolbar.attachEvent("onClick", function (id,value) {
        switch (id) {
            case "save":
                if(myForm.validate()){
                    myLayout.cells("a").progressOn();
                    myForm.send("{{ url('xml_Admin_cron_save') }}","POST",function(loader,response){
                        dhtmlx.message({
                            title:"Save",
                            type: "Notice",
                            lifetime: "60000",
                            text: response
                        });
                        GlobalRefresh();
                        myLayout.cells("a").progressOff();
                    });
                }
            break;
            case "add":
                myForm.clear();
            break;
            case "delete":
                    id = myForm.getItemValue("id");
                    DeleteCron(id);
            break;
            default:
                alert(id);
                break;
        }
    });

    myGridMenu.attachEvent("onClick", function (menuitemId, type) {
        var data = myGrid.contextID.split("_");
        var rId = data[0];
        var cInd = data[1];
        spooler = myGrid.cells(rId,0).getValue();
        switch (menuitemId) {
           case "add_filter":
                NewCron();
                break;
            case "delete_filter":
                myForm.setItemValue("id",'');
                DeleteCron(rId);
                break;
            default:
                alert("inconnu ! "+menuitemId);    
        }
        return true;
    });

    myHistory = myLayout.cells("c").attachGrid();
    myHistory.selMultiRows = true;
    myHistory.setImagePath( "{{ asset('/images/') }}");
    myHistory.setHeader("{{ "Done" | trans }},{{ "Status" | trans }},{{ "Duration" | trans }},{{ "Message" | trans }}");
    myHistory.attachHeader("#text_filter,#select_filter,#text_filter,#text_filter");
    myHistory.setInitWidths("150,100,100,*");
    myHistory.setColAlign("right,left,right,left");
    myHistory.setColTypes("ro,ro,ro,ro");
    myHistory.setColSorting("date,str,int,str");
    // myGrid.enableContextMenu(myGridMenu);
    myHistory.init();

    autorefresh = setInterval( "GlobalRefresh()",update*1000);
}

function NewCron() {
    myForm.clear();
    myForm.setItemFocus("name");
    myForm.setItemLabel("fieldset","{{ "New filter" | trans }}");
}

function EditCron(id) {
    cron=id;
    myLayout.cells("a").progressOn();
    myForm.setItemLabel("fieldset","{{ "Edit filter" | trans }}");
    myForm.clear();
    myForm.load("{{ url('xml_Admin_cron_form') }}?id="+id, function () {
        myLayout.cells("a").progressOff();
        myLayout.cells("c").progressOn();
        myLayout.cells("c").expand();
        myHistory.load( "{{ url('xml_Admin_cron_history') }}?id="+id, function () {
            myLayout.cells("c").progressOff();
        });        
    });
}

function DeleteCron(id) {
    // On edite pour sauvegarder
    myLayout.cells("a").progressOn();
    EditCron(id);
    dhtmlx.confirm({
     title: "{{ "Delete cron" | trans }}",
     type: "confirm-error",
     text: '{{ "Do you confirm the suppression ?" | trans }}',
     callback: function(answer) { if (answer) {
               myForm.send("{{ url('xml_Admin_cron_delete') }}","POST",function(loader,response){
               if(response === "success")
               {
                 dhtmlx.message({
                    title:"{{ "Save" | trans }}",
                    type: "Notice",
                    lifetime: "60000",
                    text: "{{ "Cron deleted" | trans }}"
                 });
               }
               else 
               {
                 dhtmlx.message({
                    title:"{{ "Delete" | trans }}",
                    type: "error",
                    lifetime: "60000",
                    text: response
                 });
               }
                    myLayout.cells("a").progressOff();
                    GlobalRefresh();
                })
        }
    },
     cancel: "{{ "No" | trans }}",
     ok: "{{ "Yes" | trans }}" });
 }
 
function GlobalRefresh() {
    myGrid.load("{{ url('xml_Admin_cron_list') }}", function () {
        myHistory.load("{{ url('xml_Admin_cron_history') }}?id="+cron, function () {            
        });      
    });
}
</script>
{% endblock %}
