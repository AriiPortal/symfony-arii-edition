{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script>
dhtmlxEvent(window,"load",function(){ 
var size=300;

    globalLayout = new dhtmlXLayoutObject(document.body,"3L");
    globalLayout.cells("a").hideHeader();
    globalLayout.cells("a").setWidth(size);
    globalLayout.cells("b").hideHeader();
    globalLayout.cells("c").hideHeader();
    globalLayout.cells("c").setHeight(380); 
    
    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/images/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    myToolbar = globalLayout.cells("b").attachToolbar();
    myToolbar.setIconsPath("{{ asset('/images/') }}");
    myToolbar.loadStruct("{{ url('xml_Admin_notes_toolbar') }}");

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('/images/') }}" );
    myRibbon.loadStruct("{{ url('json_Admin_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );

    mySidebar = globalLayout.cells("a").attachSidebar({
        {% include "AriiAdminBundle:Default:menu.html.twig" %}        
    });
    mySidebar.attachEvent("onBubbleClick", function(id, value){
        // bubble clicked, your code here
        // 'return true' means item allowed to be selected
        // false - otherwise
        return true;
    });
    mySidebar.attachEvent("onSelect", function(id, value){
        switch(id) {
            default:
                document.location.href = "{{ url('arii_Admin_index') }}"+id;
        }
        return true;
    });

    formData = [
       { type: "settings", position: "label-left", labelWidth: 80, inputWidth: 350, labelAlign: "right", readonly: 1, position: "label-left" },
        {type: "hidden", name: 'ID' },       
        {   type: "block",
            inputWidth: "auto",
            list: [    
                {type: "input", name: 'NAME', label:'{{ 'Name' | trans }}', required: true },
                {type: "input", name: 'TITLE', label:'{{ 'Title' | trans }}' },
                {  type: "newcolumn" },
                {type: "input", name: 'DESCRIPTION', label:'{{ 'Description' | trans }}', rows: 4 }
            ]
        },
        {  type: "newcolumn" },
        {   type: 'editor', 
             toolbar: true,
             iconsPath: "{{ asset('dhtmlx/skins/terrace/imgs/') }}",
             name: 'NOTE',
             label: "{{ "Instructions" | trans }}", 
             inputWidth: 800,
             inputHeight: 200
         }
    ];

myForm = globalLayout.cells("c").attachForm(formData);

    myFormToolbar = globalLayout.cells("c").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('/images/') }}");
    myFormToolbar.loadStruct("{{ url('xml_Admin_note_toolbar') }}");
    
    myGrid = globalLayout.cells("b").attachGrid();
    myGrid.setImagePath( "{{ asset('/images/') }}");
    myGrid.setHeader("{{ "Name" | trans }},{{ "Title" | trans }},{{ "Description" | trans }}");
    myGrid.attachHeader("#text_filter,#text_filter,#text_filter");
    myGrid.setInitWidths("*,*,*");
    myGrid.setColAlign("left,left,left");
    myGrid.setColTypes("ro,ro,ro");
    myGrid.setColSorting("str,str,str");
    myGrid.enableAlterCss("even_row","odd_row");    
    myGrid.init();
    myGrid.load( "{{ url('xml_Admin_notes_grid') }}" );
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        EditAlert(rid);
    });

    myToolbar.attachEvent("onClick", function(id){
        switch (id) {
            case 'refresh':
                myGrid.updateFromXML("{{ url('xml_Admin_notes_grid') }}");
                break;
            default:
                alert(id);
            }
    });
    
    myFormToolbar.attachEvent("onClick", function(id){
        switch (id) {
            case 'delete':
                // On edite pour sauvegarder
                globalLayout.cells("b").progressOn();
                dhtmlx.confirm({
                 title: "{{ "Delete alert" | trans }}",
                 type: "confirm-error",
                 text: '{{ "Do you confirm the suppression ?" | trans }}',
                 callback: function(answer) { if (answer) {
                           myForm.send("{{ url('xml_Admin_note_delete') }}","POST",function(loader,response){
                           if(response === "success")
                           {
                             dhtmlx.message({
                                title:"{{ "Save" | trans }}",
                                type: "Notice",
                                lifetime: "60000",
                                text: "{{ "Alert deleted" | trans }}"
                             });
                           }
                           else 
                           {
                             dhtmlx.message({
                                title:"{{ "Delete" | trans }}",
                                type: "error",
                                lifetime: "60000",
                                text: response
                             });
                             globalLayout.cells("a").attachHTMLString(response);
                           }
                                myGrid.deleteRow(myForm.getItemValue('ID'));
                                myForm.getItemValue('ID','');
                                globalLayout.cells("b").progressOff();
                            })
                    }
                },
                 cancel: "{{ "No" | trans }}",
                 ok: "{{ "Yes" | trans }}" });
                   break;
            case 'new':
            case 'add':
                myForm.clear();
                break;
            case "copy":
                myForm.setItemValue("ID",'');
                dhtmlx.message({
                        title:"Copy",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Copy" | trans }}"
                     });
                
                break;
            case 'save':
                globalLayout.progressOn();
                if(!myForm.validate())
                {
                    dhtmlx.message({
                        title:"Error",
                        type: "error",
                        lifetime: "60000",
                        text: "{{ "Please type in all the required fields!" | trans }}"
                     });
                    return;
                }
                myForm.send("{{ url('xml_Admin_note_save') }}","POST",function(loader,response){
                   if(response === "success")
                   {
                     dhtmlx.message({
                        title:"{{ "Save" | trans }}",
                        type: "Notice",
                        lifetime: "60000",
                        text: "{{ "Alert saved" | trans }}"
                     });
                   }
                   else 
                   {
                     dhtmlx.message({
                        title:"{{ "Save" | trans }}",
                        type: "error",
                        lifetime: "60000",
                        text: response
                     });
                     globalLayout.cells("b").attachHTMLString(response);
                   }
                   myGrid.updateFromXML("{{ url('xml_Admin_notes_grid') }}");
                   globalLayout.progressOff();
                });
                break;
            default:
                alert(id);
            }
    });

    globalLayout.cells("a").hideHeader();

});

function EditAlert(id) {
    globalLayout.cells("b").progressOn();
    myForm.setItemLabel("fieldset","{{ "Edit alert" | trans }}");
    myForm.clear();
    myForm.load("{{ url('xml_Admin_note_form') }}?id="+id, function () {
        globalLayout.cells("b").progressOff();
    });
}

function GlobalRefresh() {
}
</script>
{% endblock %}
