{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
function Init() {
    
    myLayout = globalLayout.cells("c").attachLayout("3L"); 
    myLayout.cells("a").setWidth(300);
    myLayout.cells("a").hideHeader();
    myLayout.cells("b").hideHeader();
    myLayout.cells("c").hideHeader();
    
    myGrid = myLayout.cells("a").attachGrid();
    myGrid.setImagePath("{{ asset('arii/images/treegrid/') }}");
    
    myGrid.setHeader("{{ "Bundle"| trans }},{{ "Description"| trans }}");
    myGrid.attachHeader("#text_filter,#text_filter");
    myGrid.setInitWidths("*,0");
    myGrid.setColAlign("left,left");
    myGrid.setColTypes("ro,ro");
//    myGrid.enableLightMouseNavigation( true );
    myGrid.enableAlterCss("even_row","odd_row");
    myGrid.load("{{ url('xml_Admin_bundles_grid') }}" );
    myGrid.init();
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        Edit(rid);
    });
    
    myParams = myLayout.cells("b").attachGrid();
    myParams.setImagePath("{{ asset('arii/images/treegrid/') }}");
    
    myParams.setHeader("{{ "Name"| trans }},{{ "Value"| trans }},{{ "Type"| trans }}");
    myParams.attachHeader("#text_filter,#text_filter,#select_filter");
    myParams.setInitWidths("200,*,80");
    myParams.setColAlign("left,left,left");
    myParams.setColTypes("ro,ro,ro");
//    myParams.enableLightMouseNavigation( true );
    myParams.load("{{ url('xml_Admin_parameters_grid') }}" );
    myParams.init();
    myParams.attachEvent("onRowDblClicked", function (rid) {
        Edit(rid);
    });
    
    formData = [
        { type: "settings", position: "label-left", labelWidth: 70, inputWidth: 300,labelAlign: "right" },
        { type: "hidden",
          name: "id"
        },         
        {  
            type: "input",
            name: "name",
            label: "{{ "Name" | trans }}",
            required: true
        },
        {  
            type: "hidden",
            name: "bundle",
            label: "{{ "Bundle" | trans }}"
        },
        {  type: "select",
            name: "domain",
            label: "{{ "Domain" | trans }}",
            required: true,
            options:[
                {text: "{{ "Executable" | trans }}", value: "exe"},
                {text: "{{ "Path" | trans }}", value: "path"},
                {text: "{{ "Color" | trans }}", value: "color"},
                {text: "{{ "Value" | trans }}", value: "value"}
            ]
         },
        {  type: "newcolumn" },
        {  inputWidth: 500,
            type: "input",
            name: "value",
            label: "{{ "Value" | trans }}",
            required: true,
            rows: 4
        }       
    ];
    myForm = myLayout.cells("c").attachForm(formData);
    myForm.enableLiveValidation(true);
    
    myToolbar = myLayout.cells("c").attachToolbar();
    myToolbar.setIconsPath("{{ asset('/images/') }}");
    myToolbar.loadStruct("{{ url('xml_Admin_parameters_toolbar') }}", function () {
        myToolbar.hideItem("delete");
    });
    myToolbar.attachEvent("onClick", function (id){
        switch (id){
            case "add":
                New();
                break;
            case "delete":
                id = myForm.getItemValue("id");
                Delete(id);
                break;
            case "save":
                if(!myForm.validate())
                {
                    dhtmlx.message({
                        title:"Error",
                        type: "error",
                        lifetime: "60000",
                        text: "{{ "Please type in all the required fields!" | trans }}"
                     });
                    return;
                }
                myLayout.cells("b").progressOn();
                myForm.send("{{ url('xml_Admin_parameter_save') }}","POST",function(loader,response){
                    myLayout.cells("b").progressOff();
                    if(response === "success")
                   {
                     dhtmlx.message({
                        title:"Save",
                        type: "Notice",
                        lifetime: "60000",
                        text: "Saved"
                     });
                     myForm.setItemFocus("title");
                     GridRefresh();
                   }
                   else 
                   {
                       alert(response);
                   }               
                });
            break;
            default:
                alert(id);
                break;
        }
    });
    
}

function GridRefresh()
{
    myParams.clearAll();
    myParams.load("{{ url('xml_Admin_parameters_grid') }}");
}

function New() {
    myForm.clear();
    myForm.setItemFocus("name");
    myToolbar.hideItem("delete");
}

function Edit(id) {
    myLayout.cells("c").progressOn();
    myToolbar.showItem("delete");
    myForm.clear();
    myForm.load("{{ url('xml_Admin_parameter_form') }}?id="+id, function () {
        myLayout.cells("c").progressOff();
    });
}

function Delete(id) {
    // On edite pour sauvegarder
    myForm.load("{{ url('xml_Admin_parameter_form') }}?id="+id, function () {
        dhtmlx.confirm({
            title: "{{ "Delete parameter" | trans }}",
            type: "confirm-error",
            text: '{{ "Do you confirm the suppression ?" | trans }}',
            callback: function(answer) { if (answer) {
                    
                      myForm.send("{{ url('xml_Admin_parameter_delete') }}","POST",function(loader,response){
                      if(response === "success")
                      {
                        dhtmlx.message({
                           title:"{{ "Delete" | trans }}",
                           type: "Notice",
                           lifetime: "60000",
                           text: "{{ "Parameter deleted" | trans }}"
                        });
                           myParams.deleteRow(id);
                         myLayout.cells("b").progressOff();
                      }
                      else 
                      {
                        dhtmlx.message({
                           title:"{{ "Delete" | trans }}",
                           type: "error",
                           lifetime: "60000",
                           text: response
                        });
                      }
                       })
               }
           },
            cancel: "{{ "No" | trans }}",
            ok: "{{ "Yes" | trans }}" 
        });
    });

 }

function GlobalRefresh() {};
</script>

{% endblock %}
