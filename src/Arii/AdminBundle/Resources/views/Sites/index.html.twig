{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
function Init() {
    
    myLayout = globalLayout.cells("b").attachLayout("3L"); 
    
    myGrid = myLayout.cells("a").attachGrid();    
    myGrid.selMultiRows = true;
    myGrid.setImagePath("{{ asset('arii/images/treegrid/') }}");
    myGrid.setHeader("{{ "Site"| trans }},{{ "Description"| trans }}");
    myGrid.setInitWidths("200,*");
    myGrid.setColAlign("left,left");
    myGrid.setColTypes("ro,ro");
    myGrid.load("{{ url('xml_Admin_sites_grid') }}");
    myGrid.init();
    myGrid.attachEvent("onRowDblClicked", function (rid) {
        Edit(rid);
    });
    
    myTabbar = myLayout.cells("b").attachTabbar();
    myTabbar.addTab("map","{{ "Map" | trans }}","200px",null,true);
    myTabbar.addTab("sites","{{ "List" | trans }}","200px");

    mySites = myTabbar.cells("sites").attachGrid();
    mySites.selMultiRows = true;
    mySites.setImagePath("{{ asset('arii/images/treegrid/') }}");
    mySites.setHeader("{{ "Site"| trans }},{{ "Description"| trans }},{{ "Address"| trans }},{{ "Zip code"| trans }},{{ "City"| trans }},{{ "Latitude"| trans }},{{ "Longitude"| trans }}");
    mySites.setInitWidths("200,*,200,100,200,120,120");
    mySites.setColAlign("left,left,left,left,left,left,left");
    mySites.setColTypes("ro,ro,ro,ro,ro,ro,ro");
    mySites.load("{{ url('xml_Admin_sites_grid') }}");
    mySites.init();
    mySites.attachEvent("onRowDblClicked", function (rid) {
        Edit(rid);
    });

    formData = [
        { type: "settings", position: "label-left", labelWidth: 120, inputWidth: 200,labelAlign: "right",noteWidth: 200 },
        {type: "hidden",name: "id"},         
        { type: "input",
          name: "name",
          label: "{{ "Site Name"| trans }}",
          required: true
        },
        { type: "input",
          name: "title",
          label: "{{ "Title"| trans }}"
        },
        { type: "input",
          rows: 3,
          name: "description",
          label: "{{ "Description"| trans }}"
        },
        { type: "newcolumn" },
        { type: "input",
          name: "address",
          rows: 2,          
          label: "{{ "Address"| trans }}"
        },
        { type: "input",
          name: "zipcode",
          label: "{{ "ZIP Code"| trans }}"
        },
        { type: "input",
          name: "city",
          label: "{{ "City"| trans }}"
        },
        { type: "newcolumn" },                
        { type: "input",
          name: "timezone",
          label: "{{ "Timezone"| trans }}"
        },
        { type: "input",
          name: "latitude",
          label: "{{ "Latitude"| trans }}"
        },
        { type: "input",
          name: "longitude",
          label: "{{ "Longitude"| trans }}"
        }
    ];

    myFormToolbar = myLayout.cells("c").attachToolbar();
    myFormToolbar.setIconsPath("{{ asset('/images/') }}");
    myFormToolbar.loadStruct("{{ url('xml_Admin_site_toolbar') }}", function () {});
    myFormToolbar.attachEvent("onClick",onClick);

    myForm = myLayout.cells("c").attachForm(formData);
    myForm.enableLiveValidation(true);

    myLayout.cells("a").hideHeader(); 
    myLayout.cells("b").hideHeader(); 

    var customparams = {
        center: new google.maps.LatLng(40.719837,-73.992348),
        zoom: 18,
        mapTypeId: google.maps.MapTypeId.ROADMAP
        };
    if (navigator.geolocation) {
        navigator.geolocation.watchPosition(showPosition);
    }
    GMaps = myTabbar.cells("map").attachMap(customparams);
    
function showPosition(position) {
    RefreshMap( position.coords.latitude, position.coords.longitude, "");
}    
    
}
    
function onClick(id){
    switch (id){
        case "add_site":
            New();
            break;
        case "edit_site":
            id = myForm.getItemValue("id");
            Edit(id);
            break;
        case "copy":
            myForm.setItemValue("ID",'');
            dhtmlx.message({
                    title:"Copy",
                    type: "Notice",
                    lifetime: "60000",
                    text: "{{ "Copy" | trans }}"
                 });

            break;
        case "save_site":
            if(!myForm.validate())
            {
                dhtmlx.message({
                    title:"Error",
                    type: "error",
                    lifetime: "60000",
                    text: "{{ "Please type in all the required fields!" | trans }}"
                 });
                return;
            }
            myLayout.cells("b").progressOn();
            myForm.send("{{ url('xml_Admin_site_save') }}","POST",function(loader,response){
                if(response === "success")
                {
                 dhtmlx.message({
                    title:"Save",
                    type: "Notice",
                    lifetime: "60000",
                    text: "{{ "Site saved" | trans }}"
                 });
                 RefreshMap( myForm.getItemValue("latitude"), myForm.getItemValue("longitude"), myForm.getItemValue("name"));
                 GridRefresh();                 
               }
               else 
               {
                   alert(response);
                   myLayout.cells("b").progressOff();
               }
            });
            break;
        default:
            break;
    }
}

function onMenuClick(menuitemId, type)
{
    var rid = mySites.contextID.split("_")[0];
    switch(menuitemId){
        case "add":
            New();
            break;
        case "edit":
            Edit(rid);
            break;
        case "delete":
            Delete(rid);
            break;
        default:
            alert(menuitemId);
    }
    return true;
}

function GridRefresh()
{
    myLayout.cells("a").progressOn();
    mySites.load("{{ url('xml_Admin_sites_grid') }}", function(){
        myLayout.cells("a").progressOff();
    });
}

function New() {
    myForm.clear();
    myForm.setItemFocus("scheduler_id");
    myForm.setItemLabel("fieldset","{{ "New site" | trans }}");
    myFormToolbar.hideItem("delete");
}

function Edit(id) {
    myLayout.cells("c").progressOn();
    myFormToolbar.showItem("delete");
    myForm.clear();
    myForm.load("{{ url('xml_Admin_site_form') }}?id="+id, function () {
        myLayout.cells("c").progressOff();
        RefreshMap( myForm.getItemValue("latitude"), myForm.getItemValue("longitude"), myForm.getItemValue("name"));
    });
}

function RefreshMap( Lat, Long, Site) {
  var latLng = new google.maps.LatLng( Lat, Long);
 
   var marker = new google.maps.Marker({
    position : latLng,
    map      : GMaps,
    title    : Site
    //icon     : "marker.gif"
  });
    GMaps.panTo(latLng); 
    myLayout.cells("b").progressOff();
}

function Delete(id) {
        dhtmlx.confirm({
        title: "{{ "Delete site" | trans }}",
        type: "confirm-error",
        text: "{{ "site.message.delete" | trans }}",
        callback: function(answer) { if (answer) {
                myLayout.cells("a").progressOn();
                dhtmlxAjax.get("{{ url('xml_Admin_site_delete') }}?id="+id,function(loader){
                    mySites.deleteRow(id);
                }); 
            }
        },
        cancel: "{{ "No" | trans }}",
        ok: "{{ "Yes" | trans }}" });
        GridRefresh();
}
function GlobalRefresh() {
    
}
</script>
{% endblock %}
