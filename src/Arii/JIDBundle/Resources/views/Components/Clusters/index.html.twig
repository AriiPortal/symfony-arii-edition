{% extends "AriiJIDBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
var lastid=0;
function Init() {
    myAccordion.cells( "components" ).open(false); 

    myClustersLayout = globalLayout.cells("b").attachLayout('2U');
    myClustersLayout.cells('a').setText("{{ "Clusters" | trans }}");
    myClustersLayout.cells('b').setText("{{ "Members" | trans }}");
    
    myMembersLayout = myClustersLayout.cells("b").attachLayout('2E');
    myMembersLayout.cells('a').setText("{{ "Members" | trans }}");
    myMembersLayout.cells('b').hideHeader();

    myClustersLayout.cells('b').collapse();

    myClustersGrid = myClustersLayout.cells('a').attachGrid();
    myClustersGrid.selMultiRows = true;
    myClustersGrid.setImagePath( "{{ asset('/images/') }}"); 
    myClustersGrid.setHeader("{{ "Scheduler" | trans }},{{ "lastHeartBeat" | trans }},{{ "Delay" | trans }},{{ "Status %" | trans }},{{ "Active" | trans }},{{ "dead" | trans }}");
    myClustersGrid.attachHeader("#select_filter,#text_filter,#select_filter,#select_filter,#text_filter,#text_filter");
    myClustersGrid.setInitWidths("*,150,120,100,100,100");
    myClustersGrid.setColAlign("left,right,right,right,right,right");
    myClustersGrid.setColTypes("ro,ro,ro,ro,ro,ro");
    myClustersGrid.setColSorting("str,date,int,int,int,int");
    myClustersGrid.enableAlterCss("","");
    myClustersGrid.init();

    myClustersGrid.attachEvent("onRowDblClicked", Detail );
    
    myClustersChart =  myMembersLayout.cells("a").attachChart ({
            view:"donut",
            value: "1",
            label: "#data11#",
            tooltip: "#data11#",
            fill:true,
            color: function (obj) {
                if (obj.data3<60) 
                    return "green";
                else if (obj.data3<120) 
                    return "orange";
                else
                    return "red";
            },
            border:false,
            shadow: 0,
            legend:{
                width: 200,
                template: "#data1#",
                valign:"top",
                align:"left"
            } 
    });
    
    myMembersGrid = myMembersLayout.cells('b').attachGrid();
    myMembersGrid.selMultiRows = true;
    myMembersGrid.setImagePath( "{{ asset('/images/') }}"); 
    myMembersGrid.setHeader("{{ "SchedulerId" | trans }},{{ "Member" | trans }},{{ "lastHeartBeat" | trans }},{{ "Delay" | trans }},{{ "nextHeartBeat" | trans }},{{ "Act." | trans }},{{ "dead" | trans }},{{ "command" | trans }},{{ "httpUrl" | trans }},{{ "deactivatingMemberId" | trans }},{{ "xml" | trans }},{{ "host" | trans }},{{ "tcp_port" | trans }},{{ "Pool" | trans }},{{ "P." | trans }},{{ "running_since" | trans }},{{ "version" | trans }}");
    myMembersGrid.attachHeader("#text_filter,#text_filter,#text_filter,#numeric_filter,#text_filter,#numeric_filter,#numeric_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter,#text_filter");
    myMembersGrid.setInitWidths("0,*,150,120,0,60,0,0,0,0,0,0,0,60,60,150,100");
    myMembersGrid.setColAlign("left,left,right,right,right,right,right,right,right,right,right,right,right,right,right,right,right");
    myMembersGrid.setColTypes("ro,ro,ro,ro,ro,ch,ro,ro,ro,ro,ro,ro,ro,ch,ro,ro,ro");
    myMembersGrid.setColSorting("str,str,date,int,date,int,int,int,int,int,int,int,int,int,int,int,int");
    myMembersGrid.enableAlterCss("","");
    myMembersGrid.init();
    GridRefresh();
}
function GridRefresh() {
    var url = "{{ url('api_JID_clusters_list', { "repoId": "REPOID" } ) }}?outputFormat=dhtmlxGrid";
    myClustersGrid.load( url.replace('REPOID',db), function() {  
        if (lastid>0)
            Detail(lastid);
    });
}

function Detail(id) {    
    lastid = id;
    myClustersLayout.cells('b').expand();
    var url = "{{ url('api_JID_clusters_get', { "repoId": "REPOID", "schedulerId": "SCHEDULERID" } ) }}?outputFormat=dhtmlxGrid";
    var schedulerId = myClustersGrid.cells(id,0).getValue();
    myMembersLayout.cells('a').setText(schedulerId);    
    myMembersGrid.load( url.replace('REPOID',db).replace('SCHEDULERID',schedulerId), function() {        
        myClustersChart.clearAll();
        myClustersChart.parse( myMembersGrid, "dhtmlxgrid");
    });    
}

</script>
{% endblock %}
