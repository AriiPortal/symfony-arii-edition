{# src/Arii/JOCBundle/Resources/views/Default/history.html.twig #}
{% extends "AriiJOCBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
var only_warning = 0; // que les problemes
var chained = 0;
var update=30;
var autorefresh;
var status;

function Init(){ 
var size=410;

    myLayout = globalLayout.cells("b").attachLayout("4E");
    
    menu = new dhtmlXMenuObject(null);
    menu.setIconsPath( "{{ asset('/images/') }}" );
    menu.renderAsContextMenu();
    menu.loadStruct("{{ url('xml_JOC_orders_menu') }}");

    myAccordion = myLayout.cells("b").attachAccordion();
    myAccordion.addItem("status", "{{ "Status" | trans }}");
    myAccordion.addItem("folders", "{{ "Folders" | trans }}");

    myDonut =  myAccordion.cells('status').attachChart({
        view:"donut",
        container:"pie_chart_container",
        value:"#JOBS#",
        label:"",
        tooltip: "#STATUS#",
        color: "#COLOR#",
        border:false,
        pieInnerText: "#JOBS#",
        shadow: 0,
        legend:{
            width: 0,
            template: "#STATUS#",
            valign:"top",
            align:"left"
        }
    });
    myDonut.load( "{{ url('xml_JOC_orders_pie') }}" );
    myDonut.attachEvent("onItemClick",function(id, value){
        status = id;
        myGrid.filterBy(5, status); 
        myGrid.getFilterElement(5).value = status;
    });
{% if is_granted('ROLE_OPERATOR') %}
    myGridToolbar = myLayout.cells("b").attachToolbar();
    myGridToolbar.setIconsPath("{{ asset('/images/') }}");
    myGridToolbar.loadStruct("{{ url('xml_JOC_orders_toolbar') }}");

    myGridToolbar.attachEvent( "onClick", function(id, value) {
        switch (id) {
            case "refresh":
                myLayout.cells("b").progressOn();
                update = value;
                GridRefresh();
                break;
            default:
                alert(id);
        }
    });
    myGridToolbar.attachEvent("onStateChange",function(id,state){
        switch (id) {
            case 'show_spooler':
                myGrid.setColumnHidden(0,!state);  
                break;
            case 'comment':
                myGrid.setColumnHidden(4,!state);  
                break;
            case 'show_info':
                myGrid.setColumnHidden(7,!state);  
                break;
            default:
                alert(id);
        }
    });
{% endif %}
    myLayout.cells("a").hideHeader();
    myLayout.cells("b").hideHeader();
    // myLayout.cells("c").setHeight(300);

    myGrid = myLayout.cells("b").attachGrid();
    myGrid.setImagePath( "{{ asset('/images/') }}");
    myGrid.setHeader("{{ "Spooler" | trans }},{{ "Chain" | trans }},{{ "Order" | trans }},{{ "State" | trans }},{{ "Output" | trans }},{{ "Status" | trans }},{{ "Start time" | trans }},{{ "Title" | trans }}");
    myGrid.attachHeader("#select_filter,#text_filter,#text_filter,#text_filter,#text_filter,#select_filter,#text_filter,#text_filter");
    myGrid.setInitWidths("*,*,*,100,150,100,150,200");
    myGrid.setColAlign("left,left,left,left,left,left,left,left");
    myGrid.setColTypes("ro,ro,ro,ro,ro,ro,ro,ro");
    myGrid.enableContextMenu(menu);
    myGrid.enableAlterCss("","");
    myGrid.enableSmartRendering(true,50);
    myGrid.init();
    myLayout.cells("b").progressOn();
    myGrid.load( "{{ url('xml_JOC_orders_grid') }}?chained="+chained+"&only_warning="+only_warning, function() {
        myLayout.cells("b").progressOff();
    } );
    // myGrid.setColumnHidden(0,true); 
    myGrid.setColumnHidden(4,true); 
    myGrid.setColumnHidden(7,true); 
    myTabbar = myLayout.cells("c").attachTabbar();
    myTabbar.addTab("order","{{ "Order" | trans }}","120px", null, true);
    myTabbar.addTab("execution","{{ "Execution" | trans }}","120px");
    myTabbar.addTab("schema","{{ "Schema" | trans }}","120px");
    myTabbar.addTab("history","{{ "History" | trans }}","120px");
    myTabbar.addTab("log","{{ "Log" | trans }}","120px");
/*  myTabbar.addTab("spooler","{{ "Spooler" | trans }}","120px");
    myTabbar.addTab("target","{{ "Target" | trans }}","120px");
    myTabbar.addTab("locks","{{ "Locks" | trans }}","120px");
    myTabbar.addTab("runtimes","{{ "Run times" | trans }}","100px");
*/   
    myGrid.attachEvent("onRowDblClicked", OrderDetail );

    myDetailLayout = myTabbar.cells("order").attachLayout("2U");
    myDetailLayout.cells("a").hideHeader();
    myDetailLayout.cells("b").hideHeader();
    myDetailLayout.cells("a").setWidth(700);

    myForm = myDetailLayout.cells("a").attachForm();
    myForm.loadStruct("{{ url('json_JOC_orders_form') }}");
{% if is_granted('ROLE_OPERATOR') %}
    myDetailToolbar = myDetailLayout.cells("a").attachToolbar();
    myDetailToolbar.setIconsPath("{{ asset('/images/') }}");
    myDetailToolbar.loadStruct( "{{ url('xml_JOC_orders_form_toolbar') }}" , function(){
        GBCalendar = new dhtmlXCalendarObject(myDetailToolbar.getInput('refDate'));
        GBCalendar.setDateFormat("%Y-%m-%d %H:%i:%s");
        GBCalendar.setWeekStartDay(1);
    });
    
    myParametersToolbar = myDetailLayout.cells("b").attachToolbar();
    myParametersToolbar.setIconsPath("{{ asset('/images/') }}");
    myParametersToolbar.loadStruct("{{ url('xml_JOC_job_params_toolbar') }}");
{% endif %}
    myParameters = myDetailLayout.cells("b").attachGrid();
    myParameters.selMultiRows = true;
    myParameters.setHeader("{{ "Parameter" | trans }},{{ "Value" | trans }}");
    myParameters.setColTypes("ed,ed");
    myParameters.setInitWidths("200,*");
    myParameters.init();
    
    myExecution = myTabbar.cells("execution").attachForm();
    myExecution.loadStruct("{{ url('json_JOC_jobs_execution_form') }}");

    menu.attachEvent("onClick", function(menuitemId,type) {
        var data = myGrid.contextID.split("_");
        var rId = data[0];
        var cInd = data[1];
        switch (menuitemId) {
               case "order_view":
                    document.location.href = "{{ url('arii_JOC_order') }}?id="+rId;
                break;
            break;
            default:
                alert(menuitemId);    
        }
        return true;
    });

    myTabbar.attachEvent("onContentLoaded", function(tab){
        myTabbar.cells("schema").progressOff();
    });
{% if is_granted('ROLE_OPERATOR') %}    
    myDetailToolbar.attachEvent("onClick",function(itemid){
        Text = '';
        var id = myForm.getItemValue('ID');
        switch(itemid) {
            case "start_order":
                Text = "{{ "Start order" | trans }}";
                break;
            case "suspend_order":
                Text = "{{ "Suspend order" | trans }}";
                break;
            case "resume_order":
                Text = "{{ "Resume order" | trans }}";
                break;
            default:
                alert(itemid);
        }
        switch(itemid) {
            case "start_order":
            case "suspend_order":
            case "resume_order":
                var params = new Array();
                myParameters.forEachRow(function(id){
                    var param = myParameters.cells(id,0).getValue() + "=" + encodeURIComponent(myParameters.cells(id,1).getValue());
                    params.push(param);
                });
                var paramsStr = params.join(",");
                var start_time = '';
                start_time = myDetailToolbar.getValue("refDate");
                // alert("{{ url('arii_JOC_command') }}?command="+itemid+"&params="+encodeURIComponent(params)+"&time="+start_time+"&id="+id); 
                dhtmlx.message({
                type: "Notice",
                text: Text });
                myLayout.cells("b").progressOn();  
                // alert("{{ url('arii_JOC_command') }}?command="+itemid+"&params="+encodeURIComponent(params)+"&time="+start_time+"&id="+id);
                dhx4.ajax.post("{{ url('arii_JOC_command') }}","command="+itemid+"&params="+encodeURIComponent(params)+"&time="+start_time+"&id="+id,function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    myLayout.cells("b").progressOff();        
                    myLayout.cells("a").progressOn();        
                    // internal refresh
                    spooler_id = myForm.getItemValue('SPOOLER_ID');
                    // alert("{{ url('arii_JOC_sync') }}?id="+spooler_id);
                    dhx4.ajax.post("{{ url('arii_JOC_sync') }}","id="+spooler_id,function(loader,response){
                        dhtmlx.message({
                        type: "Notice",
                        expire: 10000,
                        width: "500px",
                        text: loader.xmlDoc.responseText });                  
                        myLayout.cells("a").progressOff();        
                        GridRefresh();
                    });
                });
                break;
            default:
                alert(itemid);
                break;
        }
        return true;
    });
{% endif %}    

    myHistory = myTabbar.cells("history").attachGrid();
    myHistory.setHeader("{{ "Start" | trans }},{{ "End" | trans }},{{ "State" | trans }},!,{{ "Message" | trans }}");
    myHistory.attachHeader("#text_filter,#text_filter,#select_filter,#select_filter,#text_filter");
    myHistory.setInitWidths("160,160,150,40,*");
    myHistory.setColAlign("right,right,right,center,left");
    myHistory.setColTypes("ro,ro,ro,ro,ro");
    myHistory.setColSorting("date,date,str,str,str");
    myHistory.init();
    myHistory.enableSmartRendering(true,50);
    myHistory.enableAlterCss("","");
{% if is_granted('ROLE_OPERATOR') %}     
    myParametersToolbar.attachEvent("onClick",function(itemid){
        switch(itemid) {
            case "new":
                myParameters.addRow(myParameters.getRowsNum()+1,"");
                break;
            default:
                break;
        }
        return true;
    });
{% endif %}

    myLayout.cells("c").collapse(); 
    autorefresh = setInterval( "GridRefresh()",update*1000);
}

function OrderDetail(id) {
    myLayout.cells("c").expand(); 
    myTabbar.cells("order").progressOn();
    myTabbar.cells("execution").progressOn();
    myTabbar.cells("schema").progressOn();
    myForm.load("{{ url('xml_JOC_order_form') }}?id="+id, function () {
        myTabbar.cells("order").progressOff();
        // mise a jour de la toolbar
{% if is_granted('ROLE_OPERATOR') %}        
        if (myForm.getItemValue("SUSPENDED")>0) {
            myDetailToolbar.hideItem('suspend_order');
            myDetailToolbar.showItem('resume_order');
        }
        else {
            myDetailToolbar.showItem('suspend_order');
            myDetailToolbar.hideItem('resume_order');
        }
{% endif %}        
        myExecution.load("{{ url('xml_JOC_order_form') }}?id="+id, function () {
            myTabbar.cells("schema").attachURL("{{ url('svg_JOC_process_steps') }}?id="+id);
            myParameters.load("{{ url('xml_JOC_order_params') }}?id="+id, function() {
                myTabbar.cells("execution").progressOff();
            });
        });

// Historique par JID
        myTabbar.cells("history").progressOn();
        // alert("{{ url('xml_JID_order_history') }}?id="+id);
        myHistory.clearAndLoad("{{ url('xml_JID_order_history') }}?id="+id, function() {                   
            myTabbar.cells("history").progressOff();    
        });  
alert("{{ url('xml_JID_order_history') }}?id="+id);
        // myTabbar.cells("log").attachUrl("{{ url('xml_JID_order_history') }}?id="+id);
    

    });
}

function GridRefresh() {
    clearInterval( autorefresh );
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
    myRibbon.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
    myGrid.load( "{{ url('xml_JOC_orders_grid') }}?chained="+chained+"&only_warning="+only_warning, function () {
        myGrid.refreshFilters();
        myGrid.filterBy(5, status);        
        myGrid.filterByAll();
        myLayout.cells("b").progressOff();
        myDonut.load( "{{ url('xml_JOC_orders_pie') }}?chained="+chained+"&only_warning="+only_warning, function () {
            myDonut.refresh();
            myLayout.progressOff();
            autorefresh = setInterval( "GridRefresh()", update*1000 );
        });        
    });
}

function GlobalRefresh() {
    GridRefresh();
}

function onShowMenu(rowId, celInd, grid) {
    // Cas du spooler
    if (grid.getUserData(rowId, "type" )=='spooler') {
        menu.setItemDisabled("start_task");
        menu.setItemDisabled("show_history");
        menu.setItemDisabled("stop");
        menu.setItemDisabled("unstop");
        menu.setItemDisabled("kill");
        return true;
    }
        
    var status = grid.cells(rowId, 2 ).getValue();
    menu.showItem("start_task");
    menu.showItem("stop");
    menu.showItem("show_history");
    menu.setItemDisabled("kill");
    menu.setItemDisabled("unstop");
    
    switch (status) {
    case 'SUCCESS':
        menu.setItemEnabled('show_history');
        menu.setItemEnabled('start_task');
        menu.setItemEnabled('stop');
        menu.setItemDisabled('kill');
        menu.setItemDisabled('unstop');
        break;
    case 'FAILURE':
        break;
    case 'RUNNING':
        // rien du tout, c'est instancie
        return false;
        break;
    case '':
        return false;
        break;
    case 'STOPPED':
        menu.setItemEnabled('show_history');
        menu.setItemEnabled('start_task');
        menu.setItemEnabled("unstop");
        menu.setItemDisabled("stop");
        break;
    default:
        // Cas de l'instance
        if (grid.getUserData(rowId, "jobtype" )=='instance') {
            // on ne demarre pas une tache RUNNING
            menu.setItemDisabled("start_task");
            menu.setItemEnabled("kill");
            // Un job running ne peut pas avoir d'historique
            menu.setItemDisabled("show_history");
        }
        break;
    }
    // Un job ordonné ne peut être démarré 
    if (grid.getUserData(rowId, "jobtype" )=='ordered_job') {
        menu.setItemDisabled("start_task");
    }
   
return true;
}
</script>

{% endblock %}
