{# src/Arii/JIDBundle/Resources/views/Default/history.html.twig #}
{% extends "AriiReportBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
var app="{{ appl }}",
    env="{{ env }}",
    jobClass="{{ jobClass }}",
    category="{{ category }}",
    day = {{ day }},
    month={{ month }},
    year={{ year }},
    dayPast={{ dayPast }};

dhtmlxEvent(window,"load",function(){     
    globalLayout = new dhtmlXLayoutObject(document.body,"2U");
    globalLayout.cells("a").setWidth(345);
    
    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/images/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    globalMenu = globalLayout.cells("a").attachMenu();

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('/images/') }}" );
    myRibbon.loadStruct("{{ url('json_Report_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );
    
    globalLayout.cells("a").hideHeader();
    globalLayout.cells("b").setText("{{ "Runs by Day" | trans }}");
    
    {% include "AriiReportBundle:Default:tree.js.twig" %}    
    {% include "AriiReportBundle:Default:toolbar.js.twig" %}    

    myLayout = globalLayout.cells("b").attachLayout("2U");
    myLayout.cells("a").setWidth(400);
    
    myTab = myLayout.cells("a").attachTabbar();
    myTab.addTab("chart","{{ "Chart" | trans }}","100px", null, true);
    myTab.addTab("list","{{ "List" | trans }}");

    myChart = myTab.cells("list").attachGrid();
    myChart.selMultiRows = true;
    myChart.setImagePath( "{{ asset('/images/') }}");
    myChart.setHeader("{{ "Application" | trans }},{{ "Code" | trans }},{{ "Executions" | trans }},{{ "Alarms" | trans }},{{ "Acks" | trans }}");
    myChart.attachHeader("#text_filter,#text_filter,#numeric_filter,#numeric_filter,#numeric_filter");
    myChart.setColAlign("left,left,right,right,right");
    myChart.setInitWidths( "*,70,60,60,60" );    
    myChart.setColTypes("ro,ro,ro,ro,ro");
    myChart.setColSorting("str,str,int,int,int");
    myChart.init();

    barChart =  myTab.cells("chart").attachChart({
        view: "barH",
        value:"#data2#",
        color:"#00cccc",
        label:"#data2#",
        seriesPadding: 0, 
        seriesMargin: 0,
        gradient:true,
        border:false,    
        width: 10,
        padding: { left: 150 },        
        yAxis:{
                template: "#data0#",
                margin: { 
                    left: 200
                }
        },
        xAxis:{
                lines:true
        },
        legend:{
                values:[{text:"{{ "Runs" | trans }}",color:"#00cccc"},{text:"{{ "Alarms" | trans }}",color:"orange"},{text:"{{ "Issues" | trans }}",color:"red"}],
                valign:"top",
                align:"left",
                width:100,
                layout:"x"
        }
    });
    //failure
    barChart.addSeries({
        value:"#data3#",
        color:"orange",
        gradient:false,
        label: function (obj) {
            if (obj.data3>0)
                return '<font color="orange">'+obj.data3+'</font>';
        }
    });
    barChart.addSeries({
        value:"#data4#",
        color:"red",
        gradient:false,
        label: function (obj) {
            if (obj.data4>0)
                return '<font color="red">'+obj.data4+'</font>';
        }
    }); 

    myRuns = myLayout.cells("b").attachGrid();
    myLayout.cells("b").setText("{{ "Runs" | trans }}");
    myLayout.cells("b").collapse();
    myStatus = myLayout.cells("b").attachStatusBar();

    myRuns.selMultiRows = true;
    myRuns.setImagePath( "{{ asset('/images/') }}");
    myRuns.setHeader("{{ "Job" | trans }},{{ "Type" | trans }},{{ "Class" | trans }},{{ "Start time" | trans }},{{ "End time" | trans }},{{ "Status" | trans }},{{ "Alarm" | trans }},{{ "Alarm time" | trans }},{{ "Ack" | trans }},{{ "Ack time" | trans }}");
    myRuns.attachHeader("#text_filter,#select_filter,#select_filter,#text_filter,#text_filter,#select_filter,#select_filter,#text_filter,#text_filter,#text_filter");
    myRuns.setColAlign("left,left,left,right,right,right,left,left,left,left");
    myRuns.setInitWidths( "*,80,80,140,140,140,0,0,150,0" );    
    myRuns.setColTypes("ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
    myRuns.setColSorting("str,str,str,date,date,int,str,date,str,date");
    myRuns.init();
    
    myRuns.attachEvent("onRowSelect",function(id){ 
        jira = this.cells(id,6).getValue();
        if (jira=='') {
            dhtmlx.message({
                type: "Notice",
                expire: 5000,
                width: "500px",
                text: "{{ "No jira !" | trans }}" });
                return false;
        }
        window.open("https://di.vaudoise.ch/browse/"+jira);
        return true;
    });    
    barChart.attachEvent("onItemClick",function(id, event){
       var status = (event.target||event.srcElement);
       var data = this.get(id);
       Execution(data.data1);
    });
    barChart.attachEvent("onMouseMoving",function(e){
       var target = (e.target||e.srcElement);
          document.body.style.cursor = (target.tagName == "AREA"?"pointer":"default");
    })
    GlobalRefresh();
});

function GlobalRefresh() {
    myLayout.cells("b").collapse();
    myLayout.cells("a").progressOn();
    myChart.load("{{ url('xml_Report_runs_days_status')}}?app="+app+"&env="+env+"&day="+day+"&month="+month+"&year="+year+"&dayPast="+dayPast,function(){
        barChart.clearAll();
        barChart.parse(myChart,"dhtmlxgrid");
        myLayout.cells("a").progressOff();
    });
};

function Execution(id) {
    myLayout.cells("b").expand();
    myLayout.cells("b").progressOn();
    myRuns.clearAll();
    app=id;
    // alert("{{ url('xml_Report_runs_day_jobs') }}?app="+app+"&env="+env+"&month="+month+"&year="+year+"&dayPast="+dayPast+"&day="+day);
    myRuns.load("{{ url('xml_Report_runs_day_jobs') }}?app="+app+"&env="+env+"&month="+month+"&year="+year+"&dayPast="+dayPast+"&day="+day, function () {
        myStatus.setText("{{ "Runs" | trans }}"+": "+myRuns.getRowsNum());
        myLayout.cells("b").progressOff();
    });
}
</script>
{% endblock %}
