{% extends "AriiCoreBundle::base.html.twig" %}
{% block dhtmlx %}
<link rel="stylesheet" type="text/css" href="{{ asset('dhtmlx/skins/terrace/dhtmlx.css') }}" />
<script src="{{ asset('dhtmlx/codebase/dhtmlx.js') }}" type="text/javascript"></script>
{% endblock dhtmlx %}
{% block dhtmlx_plus %}
{% endblock dhtmlx_plus %}
{% block onload %}
<script language="javascript">
var bundle='Self';
var update=30;
dhtmlxEvent(window,"load",function(){   
    var size=350;
    globalLayout = new dhtmlXLayoutObject(document.body,"3T");  
    globalLayout.cells("a").setHeight(120); 
    globalLayout.cells("b").setWidth(size); 
    globalLayout.cells("b").setText("{{ "Menu" | trans }}"); 
    globalLayout.cells("c").hideHeader();
        
    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('/images/') }}" );
    myRibbon.loadStruct("{{ url('json_ARII_ribbon') }}?bundle="+bundle, function() {});
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );

    myAccordion = globalLayout.cells("b").attachLayout("2E");
    myAccordion.cells("b").setHeight(150);
    myAccordion.cells("a").setText("{{ "Requests" | trans }}");
    myAccordion.cells("b").setText("{{ "Jobs" | trans }}");

    myTree = myAccordion.cells("a").attachTree();
    myTree.setImagePath("{{ asset('/images/') }}");
    myTree.load( '{{ url('xml_Self_tree') }}');
    myTree.attachEvent("onClick", function(id) {
        switch (id.substr(0,1)) {
            case 'T':
                window.location = "{{ url('arii_Self_request') }}?request="+id.substr(1);
                break;
            default:
                return;
        }
    });

    mySidebar = myAccordion.cells("b").attachSidebar({
        icons_path: "{{ asset('/images/') }}",
        width: size,
        items:
        [
            { id:"queued", text: "{{ "Queued" | trans }}", icon: "clock.png" },
            { id:"running", text: "{{ "Running" | trans }}", icon: "cog.png" },
            { id:"failure", text: "{{ "Execution failed" | trans }}", icon: "error.png" },
            { id:"history", text: "{{ "History" | trans }}", icon: "accept.png" }
        ]
    });
    mySidebar.attachEvent("onBubbleClick", function(id, value){
        // bubble clicked, your code here
        // 'return true' means item allowed to be selected
        // false - otherwise
        return true;
    });    
    mySidebar.attachEvent("onSelect", function(id, value){
        document.location.href = "{{ url('arii_Self_index') }}"+id;
        return true;
    });
    
    myToolbar = globalLayout.cells("c").attachToolbar();
    myToolbar.setIconsPath( "{{ asset('/images/') }}" );    
    myToolbar.loadStruct('{{ url('xml_Self_toolbar') }}?refresh=1', function() {
        ToolbarTime();
    });    
    Init();    
    globalLayout.cells("a").hideHeader();
    autorefresh = setInterval( "GlobalRefresh()",update*1000);
    GlobalRefresh();
});
</script>
{% endblock onload %}
{% block body %}{% endblock%}
{% block script %}
<script language="javascript">      
function GlobalRefresh() {
    var t;
    dhx4.ajax.get( "{{ url('json_Self_jobs_count') }}?status=QUEUED",function(r1) {  
        t = dhx4.s2j(r1.xmlDoc.responseText);
        if (t['count']>0) 
            mySidebar.cells("queued").setBubble(t['count']);
        else
            mySidebar.cells("queued").clearBubble();     
        dhx4.ajax.get( "{{ url('json_Self_jobs_count') }}?status=RUNNING",function(r1) {  
            t = dhx4.s2j(r1.xmlDoc.responseText);
            if (t['count']>0) 
                mySidebar.cells("running").setBubble(t['count']);
            else
                mySidebar.cells("running").clearBubble();     
            dhx4.ajax.get( "{{ url('json_Self_jobs_count') }}?status=FAILURE",function(r1) {  
                t = dhx4.s2j(r1.xmlDoc.responseText);
                if (t['count']>0) 
                    mySidebar.cells("failure").setBubble(t['count']);
                else
                    mySidebar.cells("failure").clearBubble();     
            });
        });
    });
    PageRefresh();
}

function StateRibbon (itemid,state) {
    switch(itemid) {
        case 'home':
            
        default:
            alert(itemid);
    }
    GlobalRefresh();    
}

function ClickRibbon (itemid,state) {
    var id = itemid.split('_');
    switch (id[0]) {
        case 'BUNDLE':
            window.location = '{{ path('arii_homepage') }}'+id[1]+'/{{ app.request.locale }}';
            break;
        case 'LANG':
            window.location = '{{ path('arii_homepage') }}'+bundle.toLowerCase()+'/'+id[1];
            break;
        case 'USER':
            switch (id[1]) {
                case 'logout':
                    window.location = '{{ path('fos_user_security_logout') }}';
                    break;
            }
            break;
        case 'HELP':
            switch (id[1]) {
                case 'sos':
                    window.location = 'http://www.sos-paris.com';
                    break;
                case 'github':
                    window.location = 'https://github.com/AriiPortal';
                    break;
                case 'readme':
                    window.location = '{{ path('arii_Self_readme') }}';
                    break;
                default:
                    alert(id[1]);
                    break;                    
            }
            break;
        default:
            alert(id[0]);
            break;
    }
}

function ToolbarTime() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
    minutes = "0" + minutes;
    }
    if (seconds < 10){
    seconds = "0" + seconds;
    }
//    myToolbar.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
}
</script>
{% endblock script %}

            