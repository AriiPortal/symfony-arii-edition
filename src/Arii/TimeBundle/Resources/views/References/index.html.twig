{% extends "AriiTimeBundle::layout.html.twig" %}
{% block body %}
<script charset="utf-8">
ref_id = 0;

dhtmlxEvent(window,"load",function(){
        
    globalLayout = new dhtmlXLayoutObject(document.body,"3L");  
    globalLayout.cells("a").setWidth(350);
    globalLayout.cells("c").setText( "{{"Rules" | trans }}" );
    globalLayout.cells("a").hideHeader();
    globalLayout.cells("b").hideHeader();
   
    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/menu/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('/bundles/ariicore/images/ribbon/') }}" );
    myRibbon.loadStruct("{{ url('json_Time_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );    
    
    dhxList = globalLayout.cells("a").attachGrid();
    dhxList.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    dhxList.setHeader("{{ "Name" | trans }},{{ "Comment" | trans }},{{ "From" | trans }},{{ "To" | trans }}");
    dhxList.attachHeader("#text_filter,#text_filter,#numeric_filter,#numeric_filter");
    dhxList.setInitWidths("80,*,0,50");
    dhxList.setColAlign("left,left,right,right");
    dhxList.setColTypes("ro,ro,ro,ro");
    dhxList.setColSorting("str,str,int,int");
    dhxList.init();
    dhxList.load("{{ url('xml_Time_references_list') }}");
    dhxList.attachEvent("onRowDblClicked", Detail );

    myTab = globalLayout.cells("b").attachLayout("2U");
    myTab.cells("a").setWidth(350); 
    myTab.cells("a").hideHeader();     
    myTab.cells("b").hideHeader();
    // myTab.addTab("reference","{{ "Reference" | trans }}","100px", null, true);
    // myTab.addTab("rules","{{ "Rules" | trans }}","100px");
 
   formData = [
        { type: "settings", position: "label-left", labelWidth: 110, inputWidth: 200,labelAlign: "right",noteWidth: 200 },
        {type: "hidden",name: "id"},         
        { type: "input",
          name: "NAME",
          label: "{{ "Site Name"| trans }}",
          required: true
        },
        { type: "input",
          rows: 3,
          name: "DESCRIPTION",
          label: "{{ "Description"| trans }}"
        },
        { type: "input",
          name: "COMMENT",
          label: "{{ "Comment"| trans }}"
        },
        { type: "input",
          name: "YEAR_FROM",
          label: "{{ "From"| trans }}"
        },
        { type: "input",
          name: "YEAR_TO",
          label: "{{ "To"| trans }}"
        }
    ];
    myForm = myTab.cells("a").attachForm(formData);

    myGridMenu = new dhtmlXMenuObject(null);
    myGridMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/wa/') }}" );
    myGridMenu.renderAsContextMenu();
    myGridMenu.loadStruct("{{ url('xml_Time_context_menu') }}");

    dhxGrid = myTab.cells("b").attachGrid();
    dhxGrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    dhxGrid.setHeader("{{ "Name" | trans }},{{ "Description" | trans }},{{ "Rule" | trans }}");
    dhxGrid.attachHeader("#text_filter,#text_filter,#text_filter");
    dhxGrid.setInitWidths("250,*,300");
    dhxGrid.setColAlign("left,left,left");
    dhxGrid.setColTypes("ro,ro,ro");
    dhxGrid.setColSorting("str,str,str");
    dhxGrid.enableDragAndDrop(true);    
    dhxGrid.enableContextMenu(myGridMenu);
    dhxGrid.init();
    dhxGrid.attachEvent("OnDrop",function(dId,tId,sObj,tObj) {
        if (ref_id==0) return;
        if (dId.substr(0,1)=='R') return;
        // si il est deja dans la liste
        if (dhxGrid.getRowIndex("R"+dId)>=0) return;
        dhx4.ajax.post("{{ url('xml_Time_references_add_rule') }}?ref_id="+ref_id+"&rule_id="+dId,function(loader,response){
            dhtmlx.message({
            type: "Notice",
            expire: 10000,
            width: "500px",
            text: loader.xmlDoc.responseText });
        });
    });
    dhxGrid.attachEvent("onRowDblClicked", function(id) {
        Test(dhxGrid.cells(id,2).getValue());  
    });

    myWork = globalLayout.cells("c").attachLayout("2U");
    myWork.cells("b").setWidth(200); 
    myWork.cells("a").setText("{{ "Rules" | trans }}");     
    myWork.cells("b").setText("{{ "Test Zone" | trans }}");     

    // Liste des r√®gles
    dhxRules = myWork.cells("a").attachGrid();
    dhxRules.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    dhxRules.setHeader("{{ "Name" | trans }},{{ "Description" | trans }},{{ "Rule" | trans }}");
    dhxRules.attachHeader("#text_filter,#text_filter,#text_filter");
    dhxRules.setInitWidths("200,*,300");
    dhxRules.setColAlign("left,left,left");
    dhxRules.setColTypes("ro,ro,ro");
    dhxRules.setColSorting("str,str,str");
    dhxRules.enableDragAndDrop(true);
    dhxRules.init();
    dhxRules.load("{{ url('xml_Time_rules') }}");
    dhxRules.attachEvent("onRowDblClicked", function(id) {
        Test(dhxRules.cells(id,2).getValue());  
    });
    
    // Zone de test
    dhxTest = myWork.cells("b").attachGrid();
    dhxTest.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    dhxTest.setHeader("{{ "Date" | trans }}");
    dhxTest.attachHeader("#text_filter");
    dhxTest.setInitWidths("*");
    dhxTest.setColAlign("right");
    dhxTest.setColTypes("ro");
    dhxTest.setColSorting("date");
    dhxTest.enableDragAndDrop(true);
    dhxTest.init();

    myGridMenu.attachEvent("onClick", function (id,value) {
        var data = dhxGrid.contextID.split("_");
        //rowInd_colInd;
        var rId = data[0];
        switch(id) {
            case 'delete':
                dhx4.ajax.post("{{ url('xml_Time_references_del_rule') }}?ref_id="+ref_id+"&rule_id="+rId.substr(1),function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: 500,
                    text: loader.xmlDoc.responseText });
                    dhxGrid.deleteRow(rId);
                });
                break;
            default:
                alert(id);
        }
    });
});

function Detail(id) {
    globalLayout.cells("b").progressOn();
    ref_id = id;
    myForm.load("{{ url('xml_Time_references_form') }}?id="+id, function(){    
        dhxGrid.clearAndLoad("{{ url('xml_Time_references_rules') }}?id="+id, function(){    
            globalLayout.cells("b").progressOff();
        });    
    });    
}

function Test(rule) {
    myWork.cells("b").progressOn();
    dhxTest.clearAndLoad("{{ url('xml_Time_rule_test') }}?rule="+encodeURIComponent(rule), function(){    
        myWork.cells("b").progressOff();
    });    
}

</script>
{% endblock %}