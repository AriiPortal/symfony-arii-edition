{% extends "AriiTimeBundle::layout.html.twig" %}
{% block body %}
<body>
<script language="javascript">
function Init() {
    
    myLayout = globalLayout.cells("b").attachLayout("3L");
    myLayout.cells("a").hideHeader();

    dhxTree = myLayout.cells("a").attachTree();
    dhxTree.setImagesPath("{{ asset('/images/') }}");
    dhxTree.load( "{{ url('xml_Time_zones_tree') }}" );

    dhxGrid = myLayout.cells("b").attachGrid();
    dhxGrid.setImagePath( "{{ asset('/images/') }}");
    dhxGrid.setHeader("{{ "Code" | trans }},{{ "Name" | trans }},{{ "Description" | trans }},{{ "Latitude" | trans }},{{ "Longitude" | trans }}");
    dhxGrid.attachHeader("#text_filter,#text_filter,#text_filter,#numeric_filter,#numeric_filter");
    dhxGrid.setInitWidths("80,250,*,100,100");
    dhxGrid.setColAlign("left,left,left,right,right");
    dhxGrid.setColTypes("ro,ro,ro,ro,ro");
    dhxGrid.setColSorting("str,str,str,int,int");
    dhxGrid.init();
    dhxGrid.load("{{ url('api_Time_zones_list') }}?outputFormat=dhtmlx");

    myTab = myLayout.cells("c").attachLayout("2U");
    myTab.cells("a").hideHeader();
    myTab.cells("a").setWidth(450); 
    myTab.cells("b").hideHeader(); 

    formData = [
        { type: "settings", position: "label-left", labelWidth: 110, inputWidth: 200,labelAlign: "left",noteWidth: 200 },
        {type: "hidden",name: "id"},         
        { type: "input",
          name: "name",
          label: "{{ "Name"| trans }}",
          required: true
        },
        { type: "input",
          name: "title",
          label: "{{ "Title"| trans }}",
          required: true
        },
        {type: 'select', 
            name: 'country_id', 
            label:'{{ 'Country' | trans }}',
            connector: "{{ url('xml_Time_countries_select') }}",
            required: true
        },
        { type: "input",
          rows: 3,
          name: "description",
          label: "{{ "Description"| trans }}"
        },
        { type: "input",
          name: "latitude",
          label: "{{ "Latitude"| trans }}"
        },
        { type: "input",
          name: "longitude",
          label: "{{ "Longitude"| trans }}"
        }
    ];

    myToolbar = myTab.cells("a").attachToolbar();
    myToolbar.setIconsPath("{{ asset('/images/') }}");
    myToolbar.loadStruct( "{{ url('xml_Time_zones_toolbar') }}");

    myForm = myTab.cells("a").attachForm(formData);
    myMap = myTab.cells("b").attachMap();

    dhxGrid.attachEvent("onRowDblClicked", function (rid) {
        Detail(rid);
   });

    dhxTree.attachEvent("onClick",function(id){
        dhxGrid.load("{{ url('api_Time_zones_list') }}?outputFormat=dhtmlx&id="+id);
    })    

    myToolbar.attachEvent("onClick",function(itemid){
         switch (itemid) {
            case 'add':
            case 'new':
                myForm.clear();
                break;
            case 'copy':
                myForm.setItemValue("id","");
                dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: "{{ "Copy" | trans }}" });
                break;
            case 'save':
                globalLayout.cells("b").progressOn();
                myForm.send("{{ url('xml_Time_zone_save') }}","POST",function(loader,response){
                    dhtmlx.message({
                    type: "Notice",
                    expire: 10000,
                    width: "500px",
                    text: loader.xmlDoc.responseText });
                    dhxGrid.load("{{ url('api_Time_zones_list') }}?outputFormat=dhtmlx", function() {
                        globalLayout.cells("b").progressOff();
                    });
                });
                break;
            default:
                alert(itemid);
                break;
        }
    });
}

function Detail(id) {
    myLayout.cells("c").progressOn();
    myForm.clear();
    myForm.load("{{ url('xml_Time_zones_form') }}?id="+id, function () {
        myLayout.cells("c").progressOff();
        var latLng = new google.maps.LatLng(  myForm.getItemValue("latitude"), myForm.getItemValue("longitude") ); 
        var marker = new google.maps.Marker({
         position : latLng,
         map      : myMap,
         title    : "test"
         //icon     : "marker_lille.gif" // Chemin de l'image du marqueur pour surcharger celui par d√©faut
       });

       myMap.panTo(latLng);   
   });
}
</script>
{% endblock %}