{
  "swagger" : "2.0",
  "openapi" : "2.0",
  "info" : {
    "description" : "API Rest",
    "version" : "1.0.0",
    "title" : "API",
    "contact" : {
      "name" : "Arii",
      "url" : "https://localhost",
      "email" : "arii@sos-paris.com"
    }
  },
  "host": "localhost/app_dev.php/api/v1",
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "servers" : [
    {
        "url": "https://api.example.com/v1",
        "description": "Production server (uses live data)"
    },
    {
        "url": "https://localhost/app_dev.php/api/v1",
        "description": "Local server"
    }    
  ],
  "schemes": [
    "http",
    "https"
    ],
  "paths" : {
    "/session" : {
      "get" : {
        "summary" : "Get a list of parameters",
        "tags" : [ "Session" ],
        "parameters" : [ {
          "name" : "outputFormat",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum": [ "json", "xml" ],
          "default" : "json"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/session"
              }
            }
          }
        }
      },
      "post" : {
        "summary" : "Create a fresh session",
        "tags" : [ "Session" ],
        "parameters" : [ ],
        "responses" : {
          "202" : {
            "description" : "Reinitialised session"
          }
        }
      },
      "patch" : {
        "summary" : "Update the session",
        "tags" : [ "Session" ],
        "parameters" : [ {
          "name" : "session",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref":"#/definitions/session"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Refresh value updated"
          }     
        }
      }
    },
    "/repos" : {
      "get" : {
        "summary" : "Get the list of repos",
        "tags" : [ "Repos" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum": [ "ats", "ojs" ],
          "default" : "ojs"
        },
        {
          "name" : "outputFormat",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum": [ "json", "xml" ],
          "default" : "json"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
                "code" : {
                  "type" : "string",
                  "description" : "An error code"
                }
            }
          },
          "404" : {
            "description" : "Parameter not found"
          }        
        }
      },   
      "post" : {
        "summary" : "Create a new repo",
        "tags" : [ "Repos" ],
        "parameters" : [           {
            "name": "repo",
            "in": "body",
            "description": "Repo to add (the repo must be defined in config.yml)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/repo"
            }
          } ],
        "responses" : {
          "201" : {
            "description" : "Repo created"
          }     
        }
      }
    },
    "/repos/{repoName}" : {
      "get" : {
        "summary" : "Get information about repo by name",
        "tags" : [ "Repos" ],
        "parameters" : [ {
          "name" : "repoName",
          "in" : "path",
          "required" : false,
          "type" : "string",
          "default" : "ojs_db"
        },
        {
          "name" : "outputFormat",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum": [ "json", "xml" ],
          "default" : "json"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
                "code" : {
                  "type" : "string",
                  "description" : "An error code"
                }
            }
          },
          "404" : {
            "description" : "Parameter not found"
          }        
        }
      },   
      "put" : {
        "summary" : "Update the repo",
        "tags" : [ "Repos" ],
        "parameters" : [ {
          "name" : "repoName",
          "in" : "path",
          "required" : false,
          "type" : "string",
          "default" : "ojs_db"
        },
        {
            "name": "repo",
            "in": "body",
            "description": "Repo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/repo"
            }
          } ],
        "responses" : {
          "204" : {
            "description" : "Repo updated"
          },
          "404" : {
            "description" : "Repo not found"
          },
          "500" : {
            "description" : "Server error"
          }     
        }
      }
    }    
  },
  "definitions" : {
    "Exception" : {
      "type" : "object",
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "stackTrace" : {
          "type" : "string"
        },
        "innerException" : {
          "$ref" : "#/definitions/Exception"
        }
      },
      "description" : "A technical exception"
    },
    "Error" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "A technical message"
        },
        "display" : {
          "type" : "string",
          "description" : "A user friendly displayable message"
        },
        "code" : {
          "type" : "string",
          "description" : "An error code"
        }
      },
      "description" : "A business error"
    },
    "Validation" : {
      "type" : "object",
      "properties" : {
        "validations" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "display" : {
                "type" : "string"
              },
              "code" : {
                "type" : "string"
              },
              "fields" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "valParams" : {
                "type" : "object"
              }
            }
          }
        }
      },
      "description" : "A list of entity validation problems"
    },
    "session" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "string",
          "format": "date-time" ,       
          "description" : "Current date"
        },
        "day" : {
          "type" : "integer",
          "description" : "Current day"
        },
        "month" : {
          "type" : "integer",
          "description" : "Current month"
        },
        "year" : {
          "type" : "integer",
          "description" : "Current year"
        },
        "timestamp" : {
          "type" : "integer",
          "description" : "Current epoch"
        },
        "start" : {
          "type" : "string",
          "format": "date-time" , 
          "description" : "Start date"
        },
        "end" : {
          "type" : "string",
          "format": "date-time" , 
          "description" : "End date"
        },        
        "refresh" : {
          "type" : "integer",
          "default" : 30,
          "description" : "Refresh period in seconds"
        },
        "refreshPause" : {
          "type" : "boolean",
          "description" : "Refresh paused if true"
        },
        
        "spooler" : {
          "type" : "string",
          "description" : "Name of the spooler"
        }
      }
    },
    "repo" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the repo"
        },        
        "title" : {
          "type" : "string",
          "description" : "Display name of the repo"
        },        
        "description" : {
          "type" : "string",
          "description" : "Description of the repo"
        },        
        "type" : {
          "type" : "string",
          "description" : "Type of the repo"
        }        
      }
    }    
  }
}