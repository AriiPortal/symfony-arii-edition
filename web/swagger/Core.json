{
  "swagger" : "2.0",
  "openapi" : "2.0",
  "info" : {
    "description" : "API Rest for portal management",
    "version" : "1.0.0",
    "title" : "Ari'i API",
    "contact" : {
      "name" : "Arii",
      "url" : "https://localhost/api/v1/core",
      "email" : "arii@sos-paris.com"
    }
  },
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "basePath": "/api/v1/core",
  "schemes": [
    "http"
    ],
    "paths" : {
        "/session" : {
            "get" : {
                "summary" : "Get a list of parameters",
                "tags" : [ "Session" ],
                "parameters" : [ 
                    {
                        "name" : "outputFormat",
                        "in" : "query",
                        "required" : false,
                        "type" : "string",
                        "enum": [ "json", "xml" ],
                        "default" : "json"
                    }
                ],
            "responses" : {
              "200" : {
                "description" : "OK",
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/definitions/session"
                  }
                }
              }
            }
        },
      "post" : {
        "summary" : "Create a fresh session",
        "tags" : [ "Session" ],
        "parameters" : [ ],
        "responses" : {
          "202" : {
            "description" : "Reinitialised session"
          }
        }
      },
      "patch" : {
        "summary" : "Update the session",
        "tags" : [ "Session" ],
        "parameters" : [ {
          "name" : "session",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref":"#/definitions/session"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Refresh value updated"
          }     
        }
      }
    },
    "/applications" : {
        "get" : {
            "summary" : "Get the list of applications",
            "tags" : [ "Applications" ],
            "parameters" : [
                {
                    "name" : "appName",
                    "in" : "query",
                    "required" : false,
                    "type" : "string"
                },
                {
                    "name" : "title",
                    "in" : "query",
                    "required" : false,
                    "type" : "string"
                },
                {
                    "name" : "description",
                    "in" : "query",
                    "required" : false,
                    "type" : "string"
                },
                {
                    "name" : "contact",
                    "in" : "query",
                    "required" : false,
                    "type" : "string"
                },                
                {
                    "name" : "isActive",
                    "in" : "query",
                    "required" : false,
                    "type" : "boolean"
                }
            ],
            "responses" : {
                "200" : {
                    "description" : "OK",
                    "schema" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/definitions/application"
                        }
                    }
                },
                "404" : {
                  "description" : "Parameter not found"
                }        
            }
        },   
        "post" : {
            "summary" : "Create a new application",
            "tags" : [ "Applications" ],
            "parameters" : [
                {
                    "name": "Application",
                    "in": "body",
                    "description": "Application to add.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/application"
                    }
                } 
            ],
            "responses" : {
                "201" : {
                    "description" : "Application created",
                    "schema" : {
                        "type" : "array",
                        "items" : {
                            "$ref" : "#/definitions/application"
                        }
                    }
                }
            }
        }      
    },
    "/applications/{appName}" : {
        "get" : {
            "summary" : "Get the detail of an application",
            "tags" : [ "Applications" ],
            "parameters" : [
                {
                    "name" : "appName",
                    "in" : "path",
                    "required" : true,
                    "type" : "string"
                }
            ],
            "responses" : {
                "200" : {
                    "description" : "OK",
                    "schema" : {
                        "$ref" : "#/definitions/application"
                    }
                },
                "404" : {
                  "description" : "Parameter not found"
                }        
            }
        },   
        "put" : {
            "summary" : "Update an application",
            "tags" : [ "Applications" ],
            "parameters" : [
                {
                    "name" : "appName",
                    "path" : "query",
                    "required" : true,
                    "type" : "string"
                },
                {
                    "name": "Application",
                    "in": "body",
                    "description": "Application to add.",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/application"
                    }
                }                
            ],
            "responses" : {
                "204" : {
                    "description" : "Application is updated."
                }     
            }
        },
        "delete" : {
            "summary" : "Delete an application",
            "tags" : [ "Applications" ],
            "parameters" : [
                {
                    "name": "id",
                    "in": "path",
                    "description": "Id or Name of the application",
                    "required": true
                } 
            ],
            "responses" : {
                "204" : {
                    "description" : "Application is deleted."
                }     
            }
        }      
    },
    "/repos" : {
      "get" : {
        "summary" : "Get the list of repos",
        "tags" : [ "Repos" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum": [ "ats", "ojs" ],
          "default" : "ojs"
        },
        {
          "name" : "outputFormat",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum": [ "json", "xml" ],
          "default" : "json"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
                "code" : {
                  "type" : "string",
                  "description" : "An error code"
                }
            }
          },
          "404" : {
            "description" : "Parameter not found"
          }        
        }
      },   
      "post" : {
        "summary" : "Create a new repo",
        "tags" : [ "Repos" ],
        "parameters" : [           {
            "name": "repo",
            "in": "body",
            "description": "Repo to add (the repo must be defined in config.yml)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/repo"
            }
          } ],
        "responses" : {
          "201" : {
            "description" : "Application created"
          }     
        }
      }
    },
    "/repos/{repoName}" : {
      "get" : {
        "summary" : "Get information about repo by name",
        "tags" : [ "Repos" ],
        "parameters" : [ {
          "name" : "repoName",
          "in" : "path",
          "required" : false,
          "type" : "string",
          "default" : "ojs_db"
        },
        {
          "name" : "outputFormat",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum": [ "json", "xml" ],
          "default" : "json"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
                "code" : {
                  "type" : "string",
                  "description" : "An error code"
                }
            }
          },
          "404" : {
            "description" : "Parameter not found"
          }        
        }
      },   
      "put" : {
        "summary" : "Update the repo",
        "tags" : [ "Repos" ],
        "parameters" : [ {
          "name" : "repoName",
          "in" : "path",
          "required" : false,
          "type" : "string",
          "default" : "ojs_db"
        },
        {
            "name": "repo",
            "in": "body",
            "description": "Repo to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/repo"
            }
          } ],
        "responses" : {
          "204" : {
            "description" : "Repo updated"
          },
          "404" : {
            "description" : "Repo not found"
          },
          "500" : {
            "description" : "Server error"
          }     
        }
      }
    }    
  },
  "definitions" : {
    "Exception" : {
      "type" : "object",
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string"
        },
        "stackTrace" : {
          "type" : "string"
        },
        "innerException" : {
          "$ref" : "#/definitions/Exception"
        }
      },
      "description" : "A technical exception"
    },
    "Error" : {
      "type" : "object",
      "required" : [ "code", "message" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "A technical message"
        },
        "display" : {
          "type" : "string",
          "description" : "A user friendly displayable message"
        },
        "code" : {
          "type" : "string",
          "description" : "An error code"
        }
      },
      "description" : "A business error"
    },
    "Validation" : {
        "description" : "A list of entity validation problems",
        "type" : "object",
        "properties" : {
            "validations" : {
                "type" : "array",
                "items" : {
                    "type" : "object",
                    "properties" : {
                        "display" : {
                            "type" : "string"
                        },
                        "code" : {
                              "type" : "string"
                        },
                        "fields" : {
                            "type" : "array",
                            "items" : {
                                "type" : "string"
                            }
                        },
                        "valParams" : {
                            "type" : "object"
                        }
                    }
                }
            }
        }
    },
    "application" : {
        "type" : "object",
        "properties" : {
            "appId" : {
                "type" : "integer",
                "description" : "Database Id of the application",
                "example": "TST"
            },        
            "appName" : {
                "type" : "string",
                "description" : "Name of the application",
                "example": "TST"
            },        
            "title" : {
                "type" : "string",
                "description" : "Display name of the application",
                "example": "Test"
            },        
            "description" : {
                "type" : "string",
                "description" : "Description of the application",
                "example": "Application Test"                    
            },        
            "contact" : {
                "type" : "string",
                "description" : "Contact"
            }        
        }
    },
    "session" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "string",
          "format": "date-time" ,       
          "description" : "Current date"
        },
        "day" : {
          "type" : "integer",
          "description" : "Current day"
        },
        "month" : {
          "type" : "integer",
          "description" : "Current month"
        },
        "year" : {
          "type" : "integer",
          "description" : "Current year"
        },
        "timestamp" : {
          "type" : "integer",
          "description" : "Current epoch"
        },
        "start" : {
          "type" : "string",
          "format": "date-time" , 
          "description" : "Start date"
        },
        "end" : {
          "type" : "string",
          "format": "date-time" , 
          "description" : "End date"
        },        
        "refresh" : {
          "type" : "integer",
          "default" : 30,
          "description" : "Refresh period in seconds"
        },
        "refreshPause" : {
          "type" : "boolean",
          "description" : "Refresh paused if true"
        },
        
        "spooler" : {
          "type" : "string",
          "description" : "Name of the spooler"
        }
      }
    },
    "repo" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the repo"
        },        
        "title" : {
          "type" : "string",
          "description" : "Display name of the repo"
        },        
        "description" : {
          "type" : "string",
          "description" : "Description of the repo"
        },        
        "type" : {
          "type" : "string",
          "description" : "Type of the repo"
        }        
      }
    }    
  }
}